{"version":3,"sources":["../../../../../assets/Script/UI/assets/Script/UI/MenuGame.js"],"names":["MenuScene","require","ObjectPool","cc","Class","extends","properties","onlineList","chatBox","SeatMgr","DealCards","ButtonLeave","Node","ButtonStart","InGameButtons","myCardNode","friendCardNode","rightPanelNode","showRightButton","Button","showRightLabel","Label","start","active","node","seatOccupied","addPlayer","player","removePlayer","requestSeat","sender","seat","console","log","GSMgr","instance","parseInt","requestLeaveSeat","leaveSeat","GameMgr","getMySeat","playerEnterSeat","playerInfo","onPlayerEnter","IsMyId","id","playerLeaveSeat","setEnableStartButton","onPlayerLeave","setHost","playerId","enable","chatBoxClick","onlineClick","onStartGameClick","startGame","children","forEach","it","onCardsReceived","cards","cardCount","startAnim","card","getCard","setParent","onShowRightMenuClick","position","getPosition","string","getSelectedCards","SelectedCards","cardList","getComponentsInChildren","IsSelected","push","throwCards"],"mappings":"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","file":"MenuGame.js","sourceRoot":"../../../../../assets/Script/UI","sourcesContent":["\r\nvar MenuScene = require(\"MenuScene\");\r\nvar ObjectPool = require(\"ObjectPool\");\r\n\r\ncc.Class({\r\n    extends: MenuScene,\r\n\r\n    properties: {\r\n        onlineList: require(\"OnlineList\"),\r\n        chatBox: require(\"ChatBox\"),\r\n        SeatMgr: require(\"SeatMgr\"),\r\n        DealCards: require(\"DealCards\"),\r\n        ButtonLeave: cc.Node,\r\n        ButtonStart: cc.Node,\r\n        InGameButtons: cc.Node,\r\n        myCardNode: cc.Node,\r\n        friendCardNode: cc.Node,\r\n        rightPanelNode: cc.Node,\r\n        showRightButton: cc.Button,\r\n        showRightLabel: cc.Label,\r\n    },\r\n\r\n    start()\r\n    {\r\n        this.ButtonLeave.active = false;\r\n        this.ButtonStart.active = false;\r\n        this.InGameButtons.active = false;\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n        this.seatOccupied = [false, false, false, false];\r\n    },\r\n\r\n    addPlayer(player)\r\n    {\r\n        this.onlineList.addPlayer(player);\r\n    },\r\n\r\n    removePlayer(player)\r\n    {\r\n        this.onlineList.removePlayer(player);\r\n    },\r\n\r\n    requestSeat(sender, seat)\r\n    {\r\n        console.log(\"request Seat\");\r\n        GSMgr.instance.requestSeat(parseInt(seat));\r\n    },\r\n\r\n    requestLeaveSeat()\r\n    {\r\n        GSMgr.instance.leaveSeat(GameMgr.instance.getMySeat());\r\n    },\r\n\r\n    playerEnterSeat(playerInfo, seat)\r\n    {\r\n        this.seatOccupied[seat] = true;\r\n        this.SeatMgr.onPlayerEnter(playerInfo, seat);\r\n        if (GameMgr.instance.IsMyId(playerInfo.id))\r\n        {\r\n            this.ButtonLeave.active = true;\r\n        }\r\n    },\r\n\r\n    playerLeaveSeat(seat)\r\n    {\r\n        if (GameMgr.instance.getMySeat() == seat)\r\n        {\r\n            this.ButtonLeave.active = false;\r\n            this.setEnableStartButton(false);\r\n        }\r\n        this.SeatMgr.onPlayerLeave(seat);\r\n    },\r\n\r\n    setHost(playerId)\r\n    {\r\n        this.SeatMgr.setHost(playerId);\r\n    },\r\n\r\n    setEnableStartButton(enable) {\r\n        this.ButtonStart.active = enable;\r\n    },\r\n\r\n    chatBoxClick()\r\n    {\r\n        this.onlineList.node.active = false;\r\n        this.chatBox.node.active = true;\r\n    },\r\n\r\n    onlineClick()\r\n    {\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n    },\r\n\r\n    onStartGameClick()\r\n    {\r\n        GSMgr.instance.startGame();\r\n        this.ButtonStart.active = false;\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    onCardsReceived(cards)\r\n    {\r\n        let cardCount = 0;\r\n        this.DealCards.startAnim(()=>{\r\n            let card = ObjectPool.instance.getCard(cards[cardCount]);\r\n                card.setParent(this.myCardNode);\r\n            if (cardCount == 0)\r\n            {\r\n                this.friendCardNode.children.forEach(it => it.active = true);\r\n            }\r\n            cardCount += 1;\r\n        });\r\n        this.InGameButtons.active = true;\r\n    },\r\n\r\n    onShowRightMenuClick()\r\n    {\r\n        var position =  this.showRightButton.node.getPosition();\r\n        if(this.rightPanelNode.active == true) {\r\n            this.rightPanelNode.active = false;\r\n            this.showRightLabel.string = \"<<\";\r\n            return;\r\n        }\r\n        this.rightPanelNode.active = true;\r\n        this.showRightLabel.string = \">>\";\r\n    },\r\n\r\n    getSelectedCards()\r\n    {\r\n        var SelectedCards = [];\r\n        let cardList = this.myCardNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                if (card.IsSelected())\r\n                SelectedCards.push(card.getCard());\r\n            })\r\n        return SelectedCards;\r\n    },\r\n\r\n    throwCards()\r\n    {\r\n        let cards = this.getSelectedCards();\r\n        console.log(cards);\r\n    }\r\n});\r\n"]}