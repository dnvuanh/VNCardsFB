{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\UI/assets\\Script\\UI\\MenuGame.js"],"names":["MenuScene","require","ObjectPool","cc","Class","extends","properties","onlineList","chatBox","SeatMgr","DealCards","ButtonLeave","Node","ButtonStart","ButtonReady","PlayingButtons","myCardNode","friendCardNode","rightPanelNode","showRightButton","Button","showRightLabel","Label","throwButton","skipButton","playZoneNode","countDown","start","active","node","seatOccupied","addPlayer","player","removePlayer","requestSeat","sender","seat","console","log","GSMgr","instance","parseInt","requestLeaveSeat","leaveSeat","GameMgr","IsRegisterLeave","playerEnterSeat","playerInfo","onPlayerEnter","IsMyId","id","playerLeaveSeat","getMySeat","enableStartButton","onPlayerLeave","setHost","playerId","enable","chatBoxClick","onlineClick","onStartGameClick","startGame","children","forEach","it","onCardsReceived","cards","cardCount","startAnim","card","getCard","setParent","previousCards","previousThrowPlayer","myid","getMyId","CardsOnHand","onShowRightMenuClick","position","getPosition","string","getSelectedCards","SelectedCards","cardList","getComponentsInChildren","IsSelected","push","throwCards","skipTurn","onTurnChange","startTime","timeout","interactable","beginNewTurn","checkThrowable","GameHelper","validTurn","onThrowSuccess","MAX_CARD_ON_HAND","parseCards","removeCardsFromHand","hasOwnProperty","length","onPlayerFinished","idx","OFFSET","sort","a","b","getChildByName","getComponent","onDeselect","x","onGameWaiting","IsMeHost","hide","setPosition","recall","onGameOver","stopAllTurn","displayResult","scores","onPlayerReady","isReady","onReadyPressed","requestPlayerReady","onPlayerRegisterLeave","isLeave","getComponentInChildren","onGameStateReady","timeStamp","show","Define","TIME_FORCE_START","onGameStart"],"mappings":"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","file":"MenuGame.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\UI","sourcesContent":["\r\nvar MenuScene = require(\"MenuScene\");\r\nvar ObjectPool = require(\"ObjectPool\");\r\n\r\ncc.Class({\r\n    extends: MenuScene,\r\n\r\n    properties: {\r\n        onlineList: require(\"OnlineList\"),\r\n        chatBox: require(\"ChatBox\"),\r\n        SeatMgr: require(\"SeatMgr\"),\r\n        DealCards: require(\"DealCards\"),\r\n        ButtonLeave: cc.Node,\r\n        ButtonStart: cc.Node,\r\n        ButtonReady: cc.Node,\r\n        PlayingButtons: cc.Node,\r\n        myCardNode: cc.Node,\r\n        friendCardNode: cc.Node,\r\n        rightPanelNode: cc.Node,\r\n        showRightButton: cc.Button,\r\n        showRightLabel: cc.Label,\r\n        throwButton: cc.Button,\r\n        skipButton: cc.Button,\r\n        playZoneNode: cc.Node,\r\n        countDown: require(\"CountDown\"),\r\n    },\r\n\r\n    start()\r\n    {\r\n        this.ButtonLeave.active = false;\r\n        this.ButtonStart.active = false;\r\n        this.ButtonReady.active = false;\r\n        this.PlayingButtons.active = false;\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n        this.seatOccupied = [false, false, false, false];\r\n    },\r\n\r\n    addPlayer(player)\r\n    {\r\n        this.onlineList.addPlayer(player);\r\n    },\r\n\r\n    removePlayer(player)\r\n    {\r\n        this.onlineList.removePlayer(player);\r\n    },\r\n\r\n    requestSeat(sender, seat)\r\n    {\r\n        console.log(\"request Seat\");\r\n        GSMgr.instance.requestSeat(parseInt(seat));\r\n    },\r\n\r\n    requestLeaveSeat()\r\n    {\r\n        GSMgr.instance.leaveSeat(1 - GameMgr.instance.IsRegisterLeave());\r\n    },\r\n\r\n    playerEnterSeat(playerInfo, seat)\r\n    {\r\n        this.seatOccupied[seat] = true;\r\n        this.SeatMgr.onPlayerEnter(playerInfo, seat);\r\n        if (GameMgr.instance.IsMyId(playerInfo.id))\r\n        {\r\n            this.ButtonLeave.active = true;\r\n            //this.ButtonReady.active = !GameMgr.instance.IsHost(playerInfo.id);\r\n        }\r\n    },\r\n\r\n    playerLeaveSeat(seat)\r\n    {\r\n        if (GameMgr.instance.getMySeat() == seat)\r\n        {\r\n            this.ButtonLeave.active = false;\r\n            this.enableStartButton(false);\r\n        }\r\n        this.SeatMgr.onPlayerLeave(seat);\r\n    },\r\n\r\n    setHost(playerId)\r\n    {\r\n        this.SeatMgr.setHost(playerId);\r\n    },\r\n\r\n    enableStartButton(enable) {\r\n        this.ButtonStart.active = enable;\r\n    },\r\n\r\n    chatBoxClick()\r\n    {\r\n        this.onlineList.node.active = false;\r\n        this.chatBox.node.active = true;\r\n    },\r\n\r\n    onlineClick()\r\n    {\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n    },\r\n\r\n    onStartGameClick()\r\n    {\r\n        GSMgr.instance.startGame();\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    onCardsReceived(cards)\r\n    {\r\n        this.ButtonStart.active = false;\r\n        let cardCount = 0;\r\n        this.DealCards.startAnim(()=>{\r\n            let card = ObjectPool.instance.getCard(cards[cardCount]);\r\n            card.setParent(this.myCardNode);\r\n            if (cardCount == 0)\r\n            {\r\n                this.friendCardNode.children.forEach(it => it.active = true);\r\n            }\r\n            cardCount += 1;\r\n        });\r\n        this.PlayingButtons.active = true;\r\n        this.previousCards = null;\r\n        this.previousThrowPlayer = null;\r\n        var myid = GameMgr.instance.getMyId();\r\n        this.CardsOnHand = {[myid] : 13};\r\n    },\r\n\r\n    onShowRightMenuClick()\r\n    {\r\n        var position = this.showRightButton.node.getPosition();\r\n        if (this.rightPanelNode.active == true) {\r\n            this.rightPanelNode.active = false;\r\n            this.showRightLabel.string = \"<<\";\r\n            return;\r\n        }\r\n        this.rightPanelNode.active = true;\r\n        this.showRightLabel.string = \">>\";\r\n    },\r\n\r\n    getSelectedCards()\r\n    {\r\n        var SelectedCards = [];\r\n        let cardList = this.myCardNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                if (card.IsSelected())\r\n                SelectedCards.push(card.getCard());\r\n            })\r\n        return SelectedCards;\r\n    },\r\n\r\n    throwCards()\r\n    {\r\n        let cards = this.getSelectedCards();\r\n        GSMgr.instance.throwCards(cards);\r\n    },\r\n\r\n    skipTurn()\r\n    {\r\n        GSMgr.instance.skipTurn();\r\n    },\r\n\r\n    onTurnChange(playerId, startTime, timeout)\r\n    {\r\n        this.SeatMgr.onTurnChange(playerId, startTime, timeout);\r\n        if(GameMgr.instance.IsMyId(playerId))   {\r\n            this.PlayingButtons.active = true;\r\n        } else {\r\n            this.PlayingButtons.active = false;\r\n        }\r\n        this.throwButton.interactable = false;\r\n        this.skipButton.interactable = true;\r\n        if(this.previousThrowPlayer == playerId)\r\n        {\r\n            this.beginNewTurn();\r\n        }\r\n    },\r\n\r\n    beginNewTurn()\r\n    {\r\n        this.previousCards = null;\r\n        this.skipButton.interactable = false;\r\n        let cardList = this.playZoneNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                card.node.active = false;\r\n            });\r\n    },\r\n\r\n    checkThrowable(enable)\r\n    {\r\n        if(GameHelper.validTurn(this.previousCards, this.getSelectedCards())) {\r\n            this.throwButton.interactable = true;\r\n        }\r\n        else {\r\n            this.throwButton.interactable = false;\r\n        }\r\n    },\r\n\r\n    onThrowSuccess(playerId, cards)\r\n    {\r\n        const MAX_CARD_ON_HAND = 13;\r\n        this.previousCards = GameHelper.parseCards(cards);\r\n        this.removeCardsFromHand(playerId, cards);\r\n        this.previousThrowPlayer = playerId;\r\n        if(this.CardsOnHand.hasOwnProperty(playerId)) {\r\n            this.CardsOnHand[playerId] -= cards.length;\r\n        } else {\r\n            this.CardsOnHand[playerId] = MAX_CARD_ON_HAND - cards.length;\r\n        }\r\n        cc.log(this.CardsOnHand);\r\n        if(this.CardsOnHand[playerId] == 0)\r\n        {\r\n            this.SeatMgr.onPlayerFinished(playerId);\r\n            this.friendCardNode.children.forEach(it => it.active = false);\r\n        }\r\n    },\r\n\r\n    removeCardsFromHand(playerId, cards)\r\n    {\r\n        let idx = 0;\r\n        const OFFSET = 50;\r\n        cards.sort((a,b) => a - b);\r\n        if(GameMgr.instance.IsMyId(playerId)) {\r\n            cards.forEach(it => {\r\n                let card = this.myCardNode.getChildByName(\"Card_\" + it);\r\n                card.getComponent(\"Card\").onDeselect();\r\n                card.setParent(this.playZoneNode);\r\n                card.x = idx++ * OFFSET;\r\n            });\r\n        } else {\r\n            cards.forEach(it => {\r\n                let card = ObjectPool.instance.getCard(it);                \r\n                card.setParent(this.playZoneNode);\r\n                card.x = idx++ * OFFSET;\r\n            });\r\n        }\r\n    },\r\n\r\n    onGameWaiting()\r\n    {\r\n        if (GameMgr.instance.IsMeHost())\r\n            this.enableStartButton(false);\r\n        \r\n        this.countDown.hide();\r\n        while (this.myCardNode.children.length > 0)\r\n        {\r\n            this.myCardNode.children[0].setPosition(0,0);\r\n            ObjectPool.instance.recall(this.myCardNode.children[0]);\r\n        }\r\n\r\n        while (this.playZoneNode.children.length > 0)\r\n        {\r\n            this.playZoneNode.children[0].setPosition(0,0);\r\n            ObjectPool.instance.recall(this.playZoneNode.children[0]);\r\n        }\r\n\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    onGameOver()\r\n    {\r\n        this.SeatMgr.stopAllTurn();\r\n        this.PlayingButtons.active = false;\r\n        this.previousCards = null;\r\n    },\r\n\r\n    displayResult(scores)\r\n    {\r\n        console.log(scores);\r\n    },\r\n\r\n    onPlayerReady(playerId, isReady)\r\n    {\r\n        this.SeatMgr.onPlayerReady(playerId, isReady);\r\n        if (GameMgr.instance.IsMyId(playerId))\r\n        {\r\n            if (isReady)\r\n                this.ButtonReady.active = false;\r\n            else\r\n                this.ButtonReady.active = true;\r\n        }\r\n    },\r\n\r\n    onReadyPressed()\r\n    {\r\n        GSMgr.instance.requestPlayerReady(true);\r\n    },\r\n\r\n    onPlayerRegisterLeave(isLeave)\r\n    {\r\n        if (isLeave)\r\n            this.ButtonLeave.getComponentInChildren(cc.Label).string = \"Unleave\";\r\n        else\r\n            this.ButtonLeave.getComponentInChildren(cc.Label).string = \"Leave\";\r\n    },\r\n\r\n    onGameStateReady(timeStamp)\r\n    {\r\n        if (GameMgr.instance.IsMeHost())\r\n        {\r\n            this.enableStartButton(true);\r\n        }\r\n        this.countDown.node.active = true;\r\n        this.countDown.show(timeStamp, Define.TIME_FORCE_START);\r\n    },\r\n\r\n    onGameStart()\r\n    {\r\n        this.ButtonStart.active = false;\r\n        this.ButtonReady.active = false;\r\n        this.countDown.hide();\r\n    }\r\n});\r\n"]}