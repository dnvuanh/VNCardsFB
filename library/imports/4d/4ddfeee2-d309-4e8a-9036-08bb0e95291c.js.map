{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\UI/assets\\Script\\UI\\SeatDisplay.js"],"names":["ObjectPool","require","cc","Class","extends","Component","properties","displayNode","Node","avatar","Sprite","userName","Label","money","hostIcon","turnCountDown","ProgressBar","resultIcon","cardsNode","onLoad","active","node","IsMyTurn","display","playerInfo","playerId","id","photo","scriptData","Photo","displayName","ImageCache","loadAvatar","imgSprite","spriteFrame","console","log","string","getPlayerId","remove","setHost","isHost","displayTurn","startTime","timeout","timeStartTurn","timeoutTurnMill","timeEndTurn","disableCountDown","enableResultIcon","visible","displayCards","cards","idx","OFFSET","forEach","card","instance","getCard","it","setParent","setScale","x","RecallCards","children","length","setPosition","recall","update","dt","timeNow","Date","now","percent","progress","setReady","isReady","opacity"],"mappings":"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","file":"SeatDisplay.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\UI","sourcesContent":["var ObjectPool = require(\"ObjectPool\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        displayNode: cc.Node,\r\n        avatar: cc.Sprite,\r\n        userName: cc.Label,\r\n        money: cc.Label,\r\n        hostIcon: cc.Node,\r\n        turnCountDown: cc.ProgressBar,\r\n        resultIcon: cc.Node,\r\n        cardsNode: cc.Node,\r\n    },\r\n\r\n    onLoad()\r\n    {\r\n        this.displayNode.active = false;\r\n        this.hostIcon.active = false;\r\n        this.turnCountDown.node.active = false;\r\n        this.IsMyTurn = false;\r\n        this.resultIcon.active = false;\r\n        this.cardsNode.active = false;\r\n    },\r\n\r\n    display(playerInfo)\r\n    {\r\n        this.playerId = playerInfo.id;\r\n        let photo = playerInfo.scriptData.Photo;\r\n        let displayName = playerInfo.displayName;\r\n\r\n        ImageCache.loadAvatar(this.playerId, photo, (imgSprite)=>{\r\n            if (imgSprite)\r\n            {\r\n                this.avatar.spriteFrame = imgSprite;\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Error while loading user avatar \" + this.playerId);\r\n            }\r\n            this.userName.string = displayName;\r\n            this.displayNode.active = true;\r\n        });\r\n    },\r\n\r\n    getPlayerId()\r\n    {\r\n        return this.playerId;\r\n    },\r\n\r\n    remove()\r\n    {\r\n        this.playerId = null;\r\n        this.hostIcon.active = false;\r\n        this.displayNode.active = false;\r\n    },\r\n\r\n    setHost(isHost)\r\n    {\r\n        this.hostIcon.active = isHost;\r\n    },\r\n\r\n    displayTurn(startTime, timeout)\r\n    {\r\n        this.turnCountDown.node.active = true;\r\n        this.timeStartTurn = startTime;\r\n        this.timeoutTurnMill = timeout * 1000;\r\n        this.timeEndTurn = this.timeStartTurn + this.timeoutTurnMill;\r\n        this.IsMyTurn = true;\r\n    },\r\n\r\n    disableCountDown()\r\n    {\r\n        this.IsMyTurn = false;\r\n        this.turnCountDown.node.active = false;\r\n    },\r\n\r\n    enableResultIcon(visible)\r\n    {\r\n        this.resultIcon.active = visible;\r\n    },\r\n\r\n    displayCards(cards)\r\n    {\r\n        let idx = 0;\r\n        const OFFSET = 50;\r\n        this.cardsNode.active = true;\r\n        cards.forEach(it => {\r\n            let card = ObjectPool.instance.getCard(it);\r\n            if(card != null)                \r\n            {\r\n                card.setParent(this.cardsNode);\r\n                card.setScale(0.75, 0.75);\r\n                card.x = idx++ * OFFSET;\r\n            }\r\n        });\r\n    },\r\n\r\n    RecallCards()\r\n    {\r\n        while (this.cardsNode.children.length > 0)\r\n        {\r\n            this.cardsNode.children[0].setPosition(0, 0);\r\n            this.cardsNode.children[0].setScale(1, 1);\r\n            ObjectPool.instance.recall(this.cardsNode.children[0]);\r\n        }\r\n        this.cardsNode.active = false;\r\n    },\r\n\r\n    update(dt)\r\n    {\r\n        if (this.IsMyTurn)\r\n        {\r\n            let timeNow = Date.now();\r\n            let percent = (this.timeEndTurn - timeNow) / this.timeoutTurnMill;\r\n            if (percent > 0)\r\n            {\r\n                this.turnCountDown.progress = percent;\r\n            }\r\n            else\r\n            {\r\n                this.IsMyTurn = false;\r\n                this.turnCountDown.progress = 0;\r\n                this.turnCountDown.node.active = false;\r\n            }\r\n        }\r\n    },\r\n\r\n    setReady(isReady)\r\n    {\r\n        if (isReady)\r\n        {\r\n            this.node.opacity = 255;\r\n        }\r\n        else\r\n        {\r\n            this.node.opacity = 125;\r\n        }\r\n    }\r\n});\r\n"]}