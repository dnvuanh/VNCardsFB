{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\UI/assets\\Script\\UI\\SeatDisplay.js"],"names":["cc","Class","extends","Component","properties","displayNode","Node","avatar","Sprite","userName","Label","money","hostIcon","turnCountDown","ProgressBar","onLoad","active","node","IsMyTurn","display","playerInfo","playerId","id","photo","scriptData","Photo","displayName","ImageCache","loadAvatar","imgSprite","spriteFrame","console","log","string","getPlayerId","remove","setHost","isHost","displayTurn","startTime","timeout","timeStartTurn","timeoutTurnMill","timeEndTurn","update","dt","timeNow","Date","now","percent","progress"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,qBAAaL,GAAGM,IADR;AAERC,gBAAQP,GAAGQ,MAFH;AAGRC,kBAAUT,GAAGU,KAHL;AAIRC,eAAOX,GAAGU,KAJF;AAKRE,kBAAUZ,GAAGM,IALL;AAMRO,uBAAeb,GAAGc;AANV,KAHP;;AAYLC,UAZK,oBAaL;AACI,aAAKV,WAAL,CAAiBW,MAAjB,GAA0B,KAA1B;AACA,aAAKJ,QAAL,CAAcI,MAAd,GAAuB,KAAvB;AACA,aAAKH,aAAL,CAAmBI,IAAnB,CAAwBD,MAAxB,GAAiC,KAAjC;AACA,aAAKE,QAAL,GAAgB,KAAhB;AACH,KAlBI;AAoBLC,WApBK,mBAoBGC,UApBH,EAqBL;AAAA;;AACI,aAAKC,QAAL,GAAgBD,WAAWE,EAA3B;AACA,YAAIC,QAAQH,WAAWI,UAAX,CAAsBC,KAAlC;AACA,YAAIC,cAAcN,WAAWM,WAA7B;;AAEAC,mBAAWC,UAAX,CAAsB,KAAKP,QAA3B,EAAqCE,KAArC,EAA4C,UAACM,SAAD,EAAa;AACrD,gBAAIA,SAAJ,EACA;AACI,sBAAKtB,MAAL,CAAYuB,WAAZ,GAA0BD,SAA1B;AACH,aAHD,MAKA;AACIE,wBAAQC,GAAR,CAAY,qCAAqC,MAAKX,QAAtD;AACH;AACD,kBAAKZ,QAAL,CAAcwB,MAAd,GAAuBP,WAAvB;AACA,kBAAKrB,WAAL,CAAiBW,MAAjB,GAA0B,IAA1B;AACH,SAXD;AAYH,KAtCI;AAwCLkB,eAxCK,yBAyCL;AACI,eAAO,KAAKb,QAAZ;AACH,KA3CI;AA6CLc,UA7CK,oBA8CL;AACI,aAAKd,QAAL,GAAgB,IAAhB;AACA,aAAKT,QAAL,CAAcI,MAAd,GAAuB,KAAvB;AACA,aAAKX,WAAL,CAAiBW,MAAjB,GAA0B,KAA1B;AACH,KAlDI;AAoDLoB,WApDK,mBAoDGC,MApDH,EAqDL;AACI,aAAKzB,QAAL,CAAcI,MAAd,GAAuBqB,MAAvB;AACH,KAvDI;AAyDLC,eAzDK,uBAyDOC,SAzDP,EAyDkBC,OAzDlB,EA0DL;AACI,aAAK3B,aAAL,CAAmBI,IAAnB,CAAwBD,MAAxB,GAAiC,IAAjC;AACA,aAAKyB,aAAL,GAAqBF,SAArB;AACA,aAAKG,eAAL,GAAuBF,UAAU,IAAjC;AACA,aAAKG,WAAL,GAAmB,KAAKF,aAAL,GAAqB,KAAKC,eAA7C;AACA,aAAKxB,QAAL,GAAgB,IAAhB;AACH,KAhEI;AAkEL0B,UAlEK,kBAkEEC,EAlEF,EAmEL;AACI,YAAI,KAAK3B,QAAT,EACA;AACI,gBAAI4B,UAAUC,KAAKC,GAAL,EAAd;AACA,gBAAIC,UAAU,CAAC,KAAKN,WAAL,GAAmBG,OAApB,IAA+B,KAAKJ,eAAlD;AACA,gBAAIO,UAAU,CAAd,EACA;AACI,qBAAKpC,aAAL,CAAmBqC,QAAnB,GAA8BD,OAA9B;AACH,aAHD,MAKA;AACI,qBAAK/B,QAAL,GAAgB,KAAhB;AACA,qBAAKL,aAAL,CAAmBqC,QAAnB,GAA8B,CAA9B;AACA,qBAAKrC,aAAL,CAAmBI,IAAnB,CAAwBD,MAAxB,GAAiC,KAAjC;AACH;AACJ;AACJ;AAnFI,CAAT","file":"SeatDisplay.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\UI","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        displayNode: cc.Node,\r\n        avatar: cc.Sprite,\r\n        userName: cc.Label,\r\n        money: cc.Label,\r\n        hostIcon: cc.Node,\r\n        turnCountDown: cc.ProgressBar,\n    },\r\n\r\n    onLoad()\r\n    {\r\n        this.displayNode.active = false;\r\n        this.hostIcon.active = false;\r\n        this.turnCountDown.node.active = false;\n        this.IsMyTurn = false;\n    },\r\n\r\n    display(playerInfo)\r\n    {\r\n        this.playerId = playerInfo.id;\r\n        let photo = playerInfo.scriptData.Photo;\r\n        let displayName = playerInfo.displayName;\r\n\r\n        ImageCache.loadAvatar(this.playerId, photo, (imgSprite)=>{\r\n            if (imgSprite)\r\n            {\r\n                this.avatar.spriteFrame = imgSprite;\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Error while loading user avatar \" + this.playerId);\r\n            }\r\n            this.userName.string = displayName;\r\n            this.displayNode.active = true;\r\n        });\r\n    },\r\n\r\n    getPlayerId()\r\n    {\r\n        return this.playerId;\r\n    },\r\n\r\n    remove()\r\n    {\r\n        this.playerId = null;\r\n        this.hostIcon.active = false;\r\n        this.displayNode.active = false;\r\n    },\r\n\r\n    setHost(isHost)\r\n    {\r\n        this.hostIcon.active = isHost;\r\n    },\n\n    displayTurn(startTime, timeout)\n    {\n        this.turnCountDown.node.active = true;\n        this.timeStartTurn = startTime;\n        this.timeoutTurnMill = timeout * 1000;\n        this.timeEndTurn = this.timeStartTurn + this.timeoutTurnMill;\n        this.IsMyTurn = true;\n    },\n\n    update(dt)\n    {\n        if (this.IsMyTurn)\n        {\n            let timeNow = Date.now();\n            let percent = (this.timeEndTurn - timeNow) / this.timeoutTurnMill;\n            if (percent > 0)\n            {\n                this.turnCountDown.progress = percent;\n            }\n            else\n            {\n                this.IsMyTurn = false;\n                this.turnCountDown.progress = 0;\n                this.turnCountDown.node.active = false;\n            }\n        }\n    }\r\n});\r\n"]}