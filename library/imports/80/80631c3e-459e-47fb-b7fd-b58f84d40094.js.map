{"version":3,"sources":["../../../../assets/Script/assets/Script/Boot.js"],"names":["cc","Class","extends","Component","properties","loadingBar","ProgressBar","start","startLoading","loadResource","ImageCache","Init","InitGameSpark","bind","GSMgr","instance","LoginServer","progress","userId","FBInstantHelper","getPlayerID","authenticationRequest","OnTryLogin","response","error","playerName","getPlayerName","playerPhoto","getPlayerPhoto","registrationRequest","OnTryRegister","EnterRoom","groupId","getContextID","enterRoomRequest","onEnterRoomResponse","console","log","WaitMatchData","GameMgr","onMatchLoaded","LoadGameScene","director","preloadScene","Finished","loadScene"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAYL,GAAGM;AADP,KAHP;;AAOL;;AAEA;;AAEAC,SAXK,mBAWI;AACL,aAAKC,YAAL;AACH,KAbI;AAeLA,gBAfK,0BAgBL;AACI,aAAKC,YAAL;AACH,KAlBI;AAoBLA,gBApBK,0BAqBL;AACIC,mBAAWC,IAAX,CAAgB,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAhB;AACH,KAvBI;AAyBLD,iBAzBK,2BA0BL;AACIE,cAAMC,QAAN,CAAeJ,IAAf,CAAoB,KAAKK,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAApB;AACA,aAAKR,UAAL,CAAgBY,QAAhB,GAA2B,GAA3B;AACH,KA7BI;AA+BLD,eA/BK,yBAgCL;AACI,aAAKE,MAAL,GAAcC,gBAAgBC,WAAhB,EAAd;AACAN,cAAMC,QAAN,CAAeM,qBAAf,CAAqC,KAAKH,MAA1C,EAAkD,KAAKA,MAAvD,EAA+D,KAAKI,UAAL,CAAgBT,IAAhB,CAAqB,IAArB,CAA/D;AACH,KAnCI;AAqCLS,cArCK,sBAqCMC,QArCN,EAsCL;AACI,YAAIA,SAASC,KAAb,EACA;AACI,gBAAIC,aAAaN,gBAAgBO,aAAhB,EAAjB;AACA,gBAAIC,cAAcR,gBAAgBS,cAAhB,EAAlB;AACAd,kBAAMC,QAAN,CAAec,mBAAf,CAAmCJ,UAAnC,EAA+C,KAAKP,MAApD,EAA4D,KAAKA,MAAjE,EAAyES,WAAzE,EAAsF,KAAKG,aAAL,CAAmBjB,IAAnB,CAAwB,IAAxB,CAAtF;AACH,SALD,MAOA;AACI,iBAAKkB,SAAL;AACH;AACJ,KAjDI;AAmDLD,iBAnDK,yBAmDSP,QAnDT,EAoDL;AACI,YAAI,CAACA,SAASC,KAAd,EACA;AACI,iBAAKO,SAAL;AACH,SAHD,MAKA;AACI;AACH;AACJ,KA7DI;AA+DLA,aA/DK,uBAgEL;AACI,YAAIC,UAAUb,gBAAgBc,YAAhB,EAAd;AACAnB,cAAMC,QAAN,CAAemB,gBAAf,CAAgC,SAAhC,EAA2CF,OAA3C,EAAoD,KAAKG,mBAAL,CAAyBtB,IAAzB,CAA8B,IAA9B,CAApD;AACH,KAnEI;AAqELsB,uBArEK,+BAqEeZ,QArEf,EAsEL;AACIa,gBAAQC,GAAR,CAAYd,QAAZ;AACA,YAAI,CAACA,SAASC,KAAd,EACA;AACI,iBAAKc,aAAL;AACH;AACJ,KA5EI;AA8ELA,iBA9EK,2BA8EW;AAChB;AACIC,gBAAQxB,QAAR,CAAiByB,aAAjB,CAA+B,KAAKC,aAAL,CAAmB5B,IAAnB,CAAwB,IAAxB,CAA/B;AACH,KAjFI;AAmFL4B,iBAnFK,2BAoFL;AACIzC,WAAG0C,QAAH,CAAYC,YAAZ,CAAyB,MAAzB,EAAiC,KAAKC,QAAtC;AACA,aAAKvC,UAAL,CAAgBY,QAAhB,GAA2B,CAA3B;AACH,KAvFI;AAyFL2B,YAzFK,sBA0FL;AACI5C,WAAG0C,QAAH,CAAYG,SAAZ,CAAsB,MAAtB;AACH;AA5FI,CAAT","file":"Boot.js","sourceRoot":"../../../../assets/Script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        loadingBar: cc.ProgressBar,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        this.startLoading();\n    },\n\n    startLoading()\n    {\n        this.loadResource();\n    },\n\n    loadResource()\n    {\n        ImageCache.Init(this.InitGameSpark.bind(this));\n    },\n\n    InitGameSpark()\n    {\n        GSMgr.instance.Init(this.LoginServer.bind(this));\n        this.loadingBar.progress = 0.6;\n    },\n\n    LoginServer()\n    {      \n        this.userId = FBInstantHelper.getPlayerID();\n        GSMgr.instance.authenticationRequest(this.userId, this.userId, this.OnTryLogin.bind(this));\n    },\n\n    OnTryLogin(response)\n    {\n        if (response.error)\n        {\n            let playerName = FBInstantHelper.getPlayerName();\n            let playerPhoto = FBInstantHelper.getPlayerPhoto();\n            GSMgr.instance.registrationRequest(playerName, this.userId, this.userId, playerPhoto, this.OnTryRegister.bind(this));\n        }\n        else\n        {\n            this.EnterRoom();\n        }\n    },\n\n    OnTryRegister(response)\n    {\n        if (!response.error)\n        {\n            this.EnterRoom();\n        }\n        else\n        {\n            //pop up error\n        }\n    },\n\n    EnterRoom()\n    {\n        var groupId = FBInstantHelper.getContextID();\n        GSMgr.instance.enterRoomRequest(\"Kill_13\", groupId, this.onEnterRoomResponse.bind(this));\n    },\n\n    onEnterRoomResponse(response)\n    {\n        console.log(response);\n        if (!response.error)\n        {\n            this.WaitMatchData();\n        }\n    },\n\n    WaitMatchData() //it's sent automatically when user enter room\n    {\n        GameMgr.instance.onMatchLoaded(this.LoadGameScene.bind(this));\n    },\n\n    LoadGameScene()\n    {\n        cc.director.preloadScene(\"Game\", this.Finished);\n        this.loadingBar.progress = 1;\n    },\n\n    Finished()\n    {\n        cc.director.loadScene(\"Game\");\n    }\n});\n"]}