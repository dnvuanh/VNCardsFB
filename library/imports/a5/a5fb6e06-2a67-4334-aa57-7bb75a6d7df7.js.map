{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Game/assets\\Script\\Game\\GameMgr.js"],"names":["Define","require","GameMgr","cc","Class","extends","Component","statics","instance","onLoad","game","addPersistRootNode","node","matchData","start","GSMgr","registerOpCodeCallback","ServerCode","RP_ENTER_SEAT","onPlayerEnterSeat","bind","RP_LEAVE_SEAT","onPlayerLeaveSeat","RP_LOAD_MATCH","onMatchLoad","RP_HOST_CHANGE","onHostChange","RP_STATE_UPDATE","onGameStateUpdate","RP_GET_CARDS","onCardsReceived","onInit","startGameScene","OnMatchFound","message","console","log","JSON","stringify","onlineList","participants","OnMatchUpdate","hasOwnProperty","player","filter","id","addedPlayers","UIManager","addPlayer","removedPlayers","removePlayer","onMatchLoaded","callback","onMatchLoadedCb","parse","getString","getCurrentSeats","Seats","getPlayer","getOnlineList","getHost","Host","UpdateUserInfo","userId","getMyId","getMySeat","MySeat","IsMyId","playerId","seat","getLong","playerEnterSeat","playerLeaveSeat","setHost","State","GameState","WAITING","onGameStateWaiting","READY","onGameStateReady","setEnableStartButton","cards","sort","a","b"],"mappings":"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","file":"GameMgr.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Game","sourcesContent":["var Define = require(\"Define\");\r\nvar GameMgr = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    statics: {\r\n        instance: null\r\n    },\r\n\r\n    onLoad()\r\n    {\r\n        GameMgr.instance = this;\r\n        cc.game.addPersistRootNode(this.node);\r\n        this.matchData={};\r\n    },\r\n\r\n    start()\r\n    {\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_ENTER_SEAT, this.onPlayerEnterSeat.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LEAVE_SEAT, this.onPlayerLeaveSeat.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LOAD_MATCH, this.onMatchLoad.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_HOST_CHANGE, this.onHostChange.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_STATE_UPDATE, this.onGameStateUpdate.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_GET_CARDS, this.onCardsReceived.bind(this));\r\n    },\r\n\r\n    onInit()\r\n    {\r\n        this.startGameScene = true;\r\n    },\r\n\r\n    OnMatchFound(message)\r\n    {\r\n        console.log(\"Game on match found \" + JSON.stringify(message));\r\n        this.onlineList = message.participants;\r\n    },\r\n\r\n    OnMatchUpdate(message)\r\n    {\r\n        console.log(\"Game on match update \" + JSON.stringify(message));\r\n        this.onlineList = message.participants;\r\n        if (message.hasOwnProperty(\"addedPlayers\"))\r\n        {\r\n            let player = this.onlineList.filter(player => player.id == message.addedPlayers)[0];\r\n                UIManager.instance.addPlayer(player);\r\n        }\r\n        if (message.hasOwnProperty(\"removedPlayers\"))\r\n        {\r\n            let player = message.removedPlayers[0];\r\n                UIManager.instance.removePlayer(player);\r\n        }\r\n    },\r\n\r\n    onMatchLoaded(callback)\r\n    {\r\n        this.onMatchLoadedCb = callback;\r\n    },\r\n\r\n    onMatchLoad(message)\r\n    {\r\n        this.matchData = JSON.parse(message.getString(1));\r\n        if (this.onMatchLoadedCb)\r\n            this.onMatchLoadedCb();\r\n    },\r\n\r\n    getCurrentSeats()\r\n    {\r\n        if (this.matchData)\r\n            return this.matchData.Seats;\r\n        return {};\r\n    },\r\n\r\n    getPlayer(id)\r\n    {\r\n        return this.onlineList.filter(player => player.id == id)[0];\r\n    },\r\n\r\n    getOnlineList()\r\n    {\r\n        return this.onlineList;\r\n    },\r\n\r\n    getHost()\r\n    {\r\n        return this.matchData.Host;\r\n    },\r\n\r\n    UpdateUserInfo(message) {\r\n        this.userId = message.userId;\r\n    },\r\n\r\n    getMyId()\r\n    {\r\n        return this.userId;\r\n    },\r\n\r\n    getMySeat()\r\n    {\r\n        return this.MySeat;\r\n    },\r\n\r\n    IsMyId(id)\r\n    {\r\n        return this.userId == id;\r\n    },\r\n\r\n    onPlayerEnterSeat(message)\r\n    {\r\n        let playerId = message.getString(1);\r\n        let seat = message.getLong(2);\r\n            this.matchData.Seats[seat] = playerId;\r\n            UIManager.instance.playerEnterSeat(this.getPlayer(playerId), seat);\r\n\r\n        if (this.IsMyId(playerId))\r\n        {\r\n            this.MySeat = seat;\r\n        }\r\n    },\r\n\r\n    onPlayerLeaveSeat(message)\r\n    {\r\n        let playerId = message.getString(1);\r\n        let seat = message.getLong(2);\r\n            this.matchData.Seats[seat] = null;\r\n            UIManager.instance.playerLeaveSeat(seat);\r\n        \r\n        if (this.IsMyId(playerId))\r\n        {\r\n            this.MySeat = null;\r\n        }\r\n    },\r\n\r\n    onHostChange(message)\r\n    {\r\n        let playerId = message.getString(1);\r\n            this.matchData.Host = playerId;\r\n            UIManager.instance.setHost(playerId);\r\n    },\r\n\r\n    onGameStateUpdate(message)\r\n    {\r\n        this.matchData.State = message.getLong(1);\r\n        switch (this.matchData.State)\r\n        {\r\n            case Define.GameState.WAITING:\r\n                this.onGameStateWaiting();\r\n            break;\r\n\r\n            case Define.GameState.READY:\r\n                this.onGameStateReady();\r\n            break;\r\n        }\r\n    },\r\n\r\n    onGameStateWaiting()\r\n    {\r\n        if (this.IsMyId(this.matchData.Host))\r\n            UIManager.instance.setEnableStartButton(false);\r\n    },\r\n\r\n    onGameStateReady()\r\n    {\r\n        if (this.IsMyId(this.matchData.Host))\r\n            UIManager.instance.setEnableStartButton(true);\r\n    },\r\n\r\n    onCardsReceived(message)\r\n    {\r\n        var cards = JSON.parse(message.getString(1));\r\n        cards.sort((a,b) => a - b);\r\n        UIManager.instance.onCardsReceived(cards);\r\n    },\r\n});"]}