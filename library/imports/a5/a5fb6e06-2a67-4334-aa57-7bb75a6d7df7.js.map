{"version":3,"sources":["../../../../../assets/Script/Game/assets/Script/Game/GameMgr.js"],"names":["GameMgr","cc","Class","extends","Component","statics","instance","onLoad","game","addPersistRootNode","node","matchData","start","GSMgr","registerOpCodeCallback","ServerCode","RP_ENTER_SEAT","onPlayerEnterSeat","bind","RP_LEAVE_SEAT","onPlayerLeaveSeat","RP_LOAD_MATCH","onMatchLoad","RP_HOST_CHANGE","onHostChange","onInit","startGameScene","OnMatchFound","message","console","log","JSON","stringify","onlineList","participants","OnMatchUpdate","hasOwnProperty","player","filter","id","addedPlayers","UIManager","addPlayer","removedPlayers","removePlayer","onMatchLoaded","callback","onMatchLoadedCb","parse","getString","getCurrentSeats","Seats","getPlayer","getOnlineList","getHost","Host","playerId","seat","getLong","playerEnterSeat","playerLeaveSeat","setHost"],"mappings":"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","file":"GameMgr.js","sourceRoot":"../../../../../assets/Script/Game","sourcesContent":["var GameMgr = cc.Class({\n    extends: cc.Component,\n\n    statics: {\n        instance: null\n    },\n\n    onLoad()\n    {\n        GameMgr.instance = this;\n        cc.game.addPersistRootNode(this.node);\n        this.matchData={};\n    },\n\n    start()\n    {\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_ENTER_SEAT, this.onPlayerEnterSeat.bind(this));\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LEAVE_SEAT, this.onPlayerLeaveSeat.bind(this));\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LOAD_MATCH, this.onMatchLoad.bind(this));\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_HOST_CHANGE, this.onHostChange.bind(this));\n    },\n\n    onInit()\n    {\n        this.startGameScene = true;\n    },\n\n    OnMatchFound(message)\n    {\n        console.log(\"Game on match found \" + JSON.stringify(message));\n        this.onlineList = message.participants;\n    },\n\n    OnMatchUpdate(message)\n    {\n        console.log(\"Game on match update \" + JSON.stringify(message));\n        this.onlineList = message.participants;\n        if (message.hasOwnProperty(\"addedPlayers\"))\n        {\n            let player = this.onlineList.filter(player => player.id == message.addedPlayers)[0];\n                UIManager.instance.addPlayer(player);\n        }\n        if (message.hasOwnProperty(\"removedPlayers\"))\n        {\n            let player = message.removedPlayers[0];\n                UIManager.instance.removePlayer(player);\n        }\n    },\n\n    onMatchLoaded(callback)\n    {\n        this.onMatchLoadedCb = callback;\n    },\n\n    onMatchLoad(message)\n    {\n        this.matchData = JSON.parse(message.getString(1));\n        if (this.onMatchLoadedCb)\n            this.onMatchLoadedCb();\n    },\n\n    getCurrentSeats()\n    {\n        if (this.matchData)\n            return this.matchData.Seats;\n        return {};\n    },\n\n    getPlayer(id)\n    {\n        return this.onlineList.filter(player => player.id == id)[0];\n    },\n\n    getOnlineList()\n    {\n        return this.onlineList;\n    },\n\n    getHost()\n    {\n        return this.matchData.Host;\n    },\n\n    onPlayerEnterSeat(message)\n    {\n        let playerId = message.getString(1);\n        let seat = message.getLong(2);\n            this.matchData.Seats[seat] = playerId;\n            UIManager.instance.playerEnterSeat(this.getPlayer(playerId), seat);\n    },\n\n    onPlayerLeaveSeat(message)\n    {\n        let playerId = message.getString(1);\n        let seat = message.getLong(2);\n            this.matchData.Seats[seat] = null;\n            UIManager.instance.playerLeaveSeat(seat);\n    },\n\n    onHostChange(message)\n    {\n        let playerId = message.getString(1);\n            this.matchData.Host = playerId;\n            UIManager.instance.setHost(playerId);\n    }\n});"]}