{"version":3,"sources":["../../../../../assets/Script/Game/assets/Script/Game/GameMgr.js"],"names":["GameState","PENDING","WAIT","STARTED","OVER","GameMgr","cc","Class","extends","Component","statics","instance","onLoad","game","addPersistRootNode","node","matchData","start","GSMgr","registerOpCodeCallback","ServerCode","RP_ENTER_SEAT","onPlayerEnterSeat","bind","RP_LEAVE_SEAT","onPlayerLeaveSeat","RP_LOAD_MATCH","onMatchLoad","RP_HOST_CHANGE","onHostChange","onInit","startGameScene","state","OnMatchFound","message","console","log","JSON","stringify","onlineList","participants","OnMatchUpdate","hasOwnProperty","player","filter","id","addedPlayers","UIManager","addPlayer","removedPlayers","removePlayer","onMatchLoaded","callback","onMatchLoadedCb","parse","getString","getCurrentSeats","Seats","getPlayer","getOnlineList","getHost","Host","UpdateUserInfo","userId","playerId","seat","getLong","playerEnterSeat","setEnableStartButton","playerLeaveSeat","setHost","onGameStart","onGameOver"],"mappings":"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","file":"GameMgr.js","sourceRoot":"../../../../../assets/Script/Game","sourcesContent":["var GameState = {\n    PENDING:0,\n    WAIT:1,\n    STARTED:2,\n    OVER:3\n};\n\nvar GameMgr = cc.Class({\n    extends: cc.Component,\n\n    statics: {\n        instance: null\n    },\n\n    onLoad()\n    {\n        GameMgr.instance = this;\n        cc.game.addPersistRootNode(this.node);\n        this.matchData={};\n    },\n\n    start()\n    {\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_ENTER_SEAT, this.onPlayerEnterSeat.bind(this));\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LEAVE_SEAT, this.onPlayerLeaveSeat.bind(this));\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LOAD_MATCH, this.onMatchLoad.bind(this));\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_HOST_CHANGE, this.onHostChange.bind(this));\n    },\n\n    onInit()\n    {\n        this.startGameScene = true;\n        this.state = GameState.PENDING;\n    },\n\n    OnMatchFound(message)\n    {\n        console.log(\"Game on match found \" + JSON.stringify(message));\n        this.onlineList = message.participants;\n    },\n\n    OnMatchUpdate(message)\n    {\n        console.log(\"Game on match update \" + JSON.stringify(message));\n        this.onlineList = message.participants;\n        if (message.hasOwnProperty(\"addedPlayers\"))\n        {\n            let player = this.onlineList.filter(player => player.id == message.addedPlayers)[0];\n                UIManager.instance.addPlayer(player);\n        }\n        if (message.hasOwnProperty(\"removedPlayers\"))\n        {\n            let player = message.removedPlayers[0];\n                UIManager.instance.removePlayer(player);\n        }\n    },\n\n    onMatchLoaded(callback)\n    {\n        this.onMatchLoadedCb = callback;\n    },\n\n    onMatchLoad(message)\n    {\n        this.matchData = JSON.parse(message.getString(1));\n        if (this.onMatchLoadedCb)\n            this.onMatchLoadedCb();\n    },\n\n    getCurrentSeats()\n    {\n        if (this.matchData)\n            return this.matchData.Seats;\n        return {};\n    },\n\n    getPlayer(id)\n    {\n        return this.onlineList.filter(player => player.id == id)[0];\n    },\n\n    getOnlineList()\n    {\n        return this.onlineList;\n    },\n\n    getHost()\n    {\n        return this.matchData.Host;\n    },\n\n    UpdateUserInfo(message) {\n        this.userId = message.userId;\n    },\n\n    onPlayerEnterSeat(message)\n    {\n        let playerId = message.getString(1);\n        let seat = message.getLong(2);\n            this.matchData.Seats[seat] = playerId;\n            UIManager.instance.playerEnterSeat(this.getPlayer(playerId), seat);\n        \n        if(this.userId == this.getHost()){\n            UIManager.instance.setEnableStartButton(true);\n        } else {\n            UIManager.instance.setEnableStartButton(false);\n        }\n    },\n\n    onPlayerLeaveSeat(message)\n    {\n        let playerId = message.getString(1);\n        let seat = message.getLong(2);\n            this.matchData.Seats[seat] = null;\n            UIManager.instance.playerLeaveSeat(seat);\n    },\n\n    onHostChange(message)\n    {\n        let playerId = message.getString(1);\n            this.matchData.Host = playerId;\n            UIManager.instance.setHost(playerId);\n    },\n\n    onGameStart()\n    {\n\n    },\n\n    onGameOver()\n    {\n\n    },\n});"]}