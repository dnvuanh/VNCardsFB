{"version":3,"sources":["../../../../../assets/Script/Game/assets/Script/Game/GameMgr.js"],"names":["Define","require","GameMgr","cc","Class","extends","Component","statics","instance","onLoad","game","addPersistRootNode","node","matchData","start","GSMgr","registerOpCodeCallback","ServerCode","RP_ENTER_SEAT","onPlayerEnterSeat","bind","RP_LEAVE_SEAT","onPlayerLeaveSeat","RP_LOAD_MATCH","onMatchLoad","RP_HOST_CHANGE","onHostChange","RP_STATE_UPDATE","onGameStateUpdate","RP_GET_CARDS","onCardsReceived","RP_TURN_CHANGE","onTurnChange","RP_THROW_SUCCESS","onThrowSuccess","RP_GAME_RESULT","onGameResult","onInit","startGameScene","OnMatchFound","message","console","log","JSON","stringify","onlineList","participants","OnMatchUpdate","hasOwnProperty","player","filter","id","addedPlayers","UIManager","addPlayer","removedPlayers","removePlayer","onMatchLoaded","callback","onMatchLoadedCb","parse","getString","getCurrentSeats","Seats","getPlayer","getOnlineList","getHost","Host","IsMeHost","userId","IsHost","playerId","UpdateUserInfo","getMyId","getMySeat","MySeat","IsMyId","seat","getLong","playerEnterSeat","onPlayerReady","isReady","PlayerReady","push","index","indexOf","splice","playerLeaveSeat","setHost","State","GameState","WAITING","onGameStateWaiting","READY","onGameStateReady","GAMEOVER","onGameOver","onGameWaiting","enableStartButton","cards","sort","a","b","startTime","timeout","TurnKeeper","TimeBeginTurn","scores","displayResult"],"mappings":"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","file":"GameMgr.js","sourceRoot":"../../../../../assets/Script/Game","sourcesContent":["var Define = require(\"Define\");\r\nvar GameMgr = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    statics: {\r\n        instance: null\r\n    },\r\n\r\n    onLoad() {\r\n        GameMgr.instance = this;\r\n        cc.game.addPersistRootNode(this.node);\r\n        this.matchData = {};\r\n        //this.matchData.PlayerReady = [];\r\n    },\r\n\r\n    start() {\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_ENTER_SEAT, this.onPlayerEnterSeat.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LEAVE_SEAT, this.onPlayerLeaveSeat.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LOAD_MATCH, this.onMatchLoad.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_HOST_CHANGE, this.onHostChange.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_STATE_UPDATE, this.onGameStateUpdate.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_GET_CARDS, this.onCardsReceived.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_TURN_CHANGE, this.onTurnChange.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_THROW_SUCCESS, this.onThrowSuccess.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_GAME_RESULT, this.onGameResult.bind(this));\r\n        //GSMgr.instance.registerOpCodeCallback(ServerCode.RP_PLAYER_READY, this.onPlayerReady.bind(this));\r\n        //remove design ready\r\n    },\r\n\r\n    onInit() {\r\n        this.startGameScene = true;\r\n    },\r\n\r\n    OnMatchFound(message) {\r\n        console.log(\"Game on match found \" + JSON.stringify(message));\r\n        this.onlineList = message.participants;\r\n    },\r\n\r\n    OnMatchUpdate(message) {\r\n        console.log(\"Game on match update \" + JSON.stringify(message));\r\n        this.onlineList = message.participants;\r\n        if (message.hasOwnProperty(\"addedPlayers\")) {\r\n            let player = this.onlineList.filter(player => player.id == message.addedPlayers)[0];\r\n            UIManager.instance.addPlayer(player);\r\n        }\r\n        if (message.hasOwnProperty(\"removedPlayers\")) {\r\n            let player = message.removedPlayers[0];\r\n            UIManager.instance.removePlayer(player);\r\n        }\r\n    },\r\n\r\n    onMatchLoaded(callback) {\r\n        this.onMatchLoadedCb = callback;\r\n    },\r\n\r\n    onMatchLoad(message) {\r\n        this.matchData = JSON.parse(message.getString(1));\r\n        if (this.onMatchLoadedCb)\r\n            this.onMatchLoadedCb();\r\n    },\r\n\r\n    getCurrentSeats() {\r\n        if (this.matchData)\r\n            return this.matchData.Seats;\r\n        return {};\r\n    },\r\n\r\n    getPlayer(id) {\r\n        return this.onlineList.filter(player => player.id == id)[0];\r\n    },\r\n\r\n    getOnlineList() {\r\n        return this.onlineList;\r\n    },\r\n\r\n    getHost() {\r\n        return this.matchData.Host;\r\n    },\r\n\r\n    IsMeHost()\r\n    {\r\n        return (this.userId == this.matchData.Host || this.matchData.Host == null);\r\n    },\r\n\r\n    IsHost(playerId)\r\n    {\r\n        return (playerId == this.matchData.Host || this.matchData.Host == null);\r\n    },\r\n\r\n    UpdateUserInfo(message) {\r\n        this.userId = message.userId;\r\n    },\r\n\r\n    getMyId() {\r\n        return this.userId;\r\n    },\r\n\r\n    getMySeat() {\r\n        return this.MySeat;\r\n    },\r\n\r\n    IsMyId(id) {\r\n        return this.userId == id;\r\n    },\r\n\r\n    onPlayerEnterSeat(message) {\r\n        let playerId = message.getString(1);\r\n        let seat = message.getLong(2);\r\n        this.matchData.Seats[seat] = playerId;\r\n        UIManager.instance.playerEnterSeat(this.getPlayer(playerId), seat);\r\n\r\n        if (this.IsMyId(playerId)) {\r\n            this.MySeat = seat;\r\n        }\r\n    },\r\n\r\n    onPlayerReady(message) {\r\n        let playerId = message.getString(1);\r\n        let isReady = message.getLong(2);\r\n        if (isReady)\r\n        {\r\n            this.matchData.PlayerReady.push(playerId);\r\n        }\r\n        else\r\n        {\r\n            let index = this.matchData.PlayerReady.indexOf(playerId);\r\n            this.matchData.PlayerReady.splice(index, 1);\r\n        }\r\n        UIManager.instance.onPlayerReady(playerId, isReady);\r\n    },\r\n\r\n    onPlayerLeaveSeat(message) {\r\n        let playerId = message.getString(1);\r\n        let seat = message.getLong(2);\r\n        this.matchData.Seats[seat] = null;\r\n        UIManager.instance.playerLeaveSeat(seat);\r\n\r\n        if (this.IsMyId(playerId)) {\r\n            this.MySeat = null;\r\n        }\r\n    },\r\n\r\n    onHostChange(message) {\r\n        let playerId = message.getString(1);\r\n        this.matchData.Host = playerId;\r\n        UIManager.instance.setHost(playerId);\r\n    },\r\n\r\n    onGameStateUpdate(message) {\r\n        this.matchData.State = message.getLong(1);\r\n        console.log('GameState Change ' + this.matchData.State);\r\n        switch (this.matchData.State) {\r\n            case Define.GameState.WAITING:\r\n                this.onGameStateWaiting();\r\n                break;\r\n\r\n            case Define.GameState.READY:\r\n                this.onGameStateReady();\r\n                break;\r\n\r\n            case Define.GameState.GAMEOVER:\r\n                this.onGameOver();\r\n                break;\r\n        }\r\n    },\r\n\r\n    onGameStateWaiting() {\r\n        UIManager.instance.onGameWaiting();\r\n    },\r\n\r\n    onGameStateReady() {\r\n        if (this.IsMyId(this.matchData.Host))\r\n            UIManager.instance.enableStartButton(true);\r\n    },\r\n\r\n    onGameOver() {\r\n        UIManager.instance.onGameOver();\r\n    },\r\n\r\n    onCardsReceived(message) {\r\n        let cards = JSON.parse(message.getString(1));\r\n        cards.sort((a, b) => a - b);\r\n        UIManager.instance.onCardsReceived(cards);\r\n    },\r\n\r\n    onTurnChange(message) {\r\n        let playerId = message.getString(1);\r\n        let startTime = message.getLong(2);\r\n        let timeout = message.getLong(3);\r\n        this.matchData.TurnKeeper = playerId;\r\n        this.matchData.TimeBeginTurn = startTime;\r\n        UIManager.instance.onTurnChange(playerId, startTime, timeout);\r\n    },\r\n\r\n    onThrowSuccess(message) {\r\n        let playerId = message.getString(1);\r\n        let cards = JSON.parse(message.getString(2));\r\n        UIManager.instance.onThrowSuccess(playerId, cards);\r\n    },\r\n\r\n    onGameResult(message)\r\n    {\r\n        let scores = JSON.parse(message.getString(1));\r\n        UIManager.instance.displayResult(scores);\r\n    }\r\n});"]}