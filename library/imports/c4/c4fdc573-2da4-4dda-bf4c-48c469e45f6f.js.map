{"version":3,"sources":["../../../../../assets/Script/UI/assets/Script/UI/DealCards.js"],"names":["cc","Class","extends","Component","properties","cardsOfEach","flyingTime","delayTime","destination","Node","startAnim","callbackEveryTurn","deliveryCount","startFlying","i","node","children","length","cardOrder","position","DelayTime","moveTo","MoveTo","finish","callFunc","onCardDelivery","sequence","Sequence","active","runAction","card"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,qBAAa,EADL;AAERC,oBAAY,GAFJ;AAGRC,mBAAW,GAHH;AAIRC,qBAAa,CAACR,GAAGS,IAAJ;AAJL,KAHP;;AAULC,aAVK,qBAUKC,iBAVL,EAWL;AACI,aAAKC,aAAL,GAAqB,CAArB;AACA,aAAKC,WAAL,GAAmB,IAAnB;AACA,aAAKF,iBAAL,GAAyBA,iBAAzB;AACA,aAAK,IAAIG,IAAE,CAAX,EAAcA,IAAE,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,MAAnC,EAA2CH,GAA3C,EACA;AACI,gBAAII,YAAaJ,IAAE,KAAKN,WAAL,CAAiBS,MAApC;AACA,gBAAIE,WAAW,KAAKX,WAAL,CAAkBM,IAAI,KAAKN,WAAL,CAAiBS,MAAvC,EAAgDE,QAA/D;AACA,gBAAIZ,YAAY,IAAIP,GAAGoB,SAAP,CAAiBF,YAAY,KAAKX,SAAlC,CAAhB;AACA,gBAAIc,SAAS,IAAIrB,GAAGsB,MAAP,CAAc,KAAKhB,UAAnB,EAA+Ba,QAA/B,CAAb;AACA,gBAAII,SAAS,IAAIvB,GAAGwB,QAAP,CAAgB,KAAKC,cAArB,EAAqC,IAArC,EAA2C,KAAKV,IAAL,CAAUC,QAAV,CAAmBF,CAAnB,CAA3C,CAAb;AACA,gBAAIY,WAAW,IAAI1B,GAAG2B,QAAP,CAAgBpB,SAAhB,EAA2Bc,MAA3B,EAAmCE,MAAnC,CAAf;AACI,iBAAKR,IAAL,CAAUC,QAAV,CAAmBF,CAAnB,EAAsBc,MAAtB,GAA+B,IAA/B;AACA,iBAAKb,IAAL,CAAUC,QAAV,CAAmBF,CAAnB,EAAsBe,SAAtB,CAAgCH,QAAhC;AACP;AACJ,KA1BI;AA4BLD,kBA5BK,0BA4BUK,IA5BV,EA6BL;AACI,aAAKlB,aAAL,IAAsB,CAAtB;AACAkB,aAAKF,MAAL,GAAc,KAAd;AACA,YAAI,KAAKhB,aAAL,GAAqB,KAAKJ,WAAL,CAAiBS,MAAtC,IAAgD,CAApD,EACA;AACI,iBAAKN,iBAAL;AACH;AACJ;AApCI,CAAT","file":"DealCards.js","sourceRoot":"../../../../../assets/Script/UI","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        cardsOfEach: 13,\n        flyingTime: 0.2,\n        delayTime: 0.1,\n        destination: [cc.Node]\n    },\n\n    startAnim(callbackEveryTurn)\n    {\n        this.deliveryCount = 0;\n        this.startFlying = true;\n        this.callbackEveryTurn = callbackEveryTurn;\n        for (var i=0; i<this.node.children.length; i++)\n        {\n            let cardOrder = (i/this.destination.length);\n            let position = this.destination[(i % this.destination.length)].position;\n            let delayTime = new cc.DelayTime(cardOrder * this.delayTime);\n            let moveTo = new cc.MoveTo(this.flyingTime, position);\n            let finish = new cc.callFunc(this.onCardDelivery, this, this.node.children[i]);\n            let sequence = new cc.Sequence(delayTime, moveTo, finish);\n                this.node.children[i].active = true;\n                this.node.children[i].runAction(sequence);\n        }\n    },\n\n    onCardDelivery(card)\n    {\n        this.deliveryCount += 1;\n        card.active = false;\n        if (this.deliveryCount % this.destination.length == 0)\n        {\n            this.callbackEveryTurn();\n        }\n    }\n});\n"]}