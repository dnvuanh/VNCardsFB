{"version":3,"sources":["../../../../assets/Script/assets/Script/CountDown.js"],"names":["cc","Class","extends","Component","properties","secondString","Label","start","node","active","show","timeStart","totalSecond","display","string","currentDisplay","hide","update","dt","timeNow","Date","now","remainSecond","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,sBAAcL,GAAGM;AADT,KAHP;;AAOLC,SAPK,mBAQL;AACI,aAAKC,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH,KAVI;AAYLC,QAZK,gBAYAC,SAZA,EAYWC,WAZX,EAaL;AACI,aAAKP,YAAL,CAAkBG,IAAlB,CAAuBK,OAAvB,GAAiC,IAAjC;AACA,aAAKF,SAAL,GAAiBA,SAAjB;AACA,aAAKN,YAAL,CAAkBS,MAAlB,GAA2BF,WAA3B;AACA,aAAKG,cAAL,GAAsBH,WAAtB;AACA,aAAKA,WAAL,GAAmBA,WAAnB;AACH,KAnBI;AAqBLI,QArBK,kBAsBL;AACI,aAAKR,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH,KAxBI;AA0BLQ,UA1BK,kBA0BEC,EA1BF,EA2BL;AACI,YAAIC,UAAUC,KAAKC,GAAL,EAAd;AACA,YAAIC,eAAe,KAAKV,WAAL,GAAmBW,KAAKC,KAAL,CAAW,CAACL,UAAU,KAAKR,SAAhB,IAA2B,IAAtC,CAAtC;AACA,YAAIW,eAAe,CAAnB,EACA;AACI,gBAAIA,gBAAgB,KAAKP,cAAzB,EACA;AACI,qBAAKV,YAAL,CAAkBS,MAAlB,GAA2BQ,YAA3B;AACA,qBAAKP,cAAL,GAAsBO,YAAtB;AACH;AACJ,SAPD,MASA;AACI,iBAAKN,IAAL;AACH;AACJ;AA1CI,CAAT","file":"CountDown.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        secondString: cc.Label\n    },\n\n    start()\n    {\n        this.node.active = false;\n    },\n\n    show(timeStart, totalSecond)\n    {\n        this.secondString.node.display = true;\n        this.timeStart = timeStart;\n        this.secondString.string = totalSecond;\n        this.currentDisplay = totalSecond;\n        this.totalSecond = totalSecond;\n    },\n\n    hide()\n    {\n        this.node.active = false;\n    },\n\n    update(dt)\n    {\n        let timeNow = Date.now();\n        let remainSecond = this.totalSecond - Math.floor((timeNow - this.timeStart)/1000);\n        if (remainSecond > 0)\n        {\n            if (remainSecond != this.currentDisplay)\n            {\n                this.secondString.string = remainSecond;\n                this.currentDisplay = remainSecond;\n            }\n        }\n        else\n        {\n            this.hide();\n        }\n    }\n});\n"]}