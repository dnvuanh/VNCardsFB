{"version":3,"sources":["GameMgr.js"],"names":["GameMgr","cc","Class","extends","Component","statics","instance","onLoad","game","addPersistRootNode","node","matchData","RegisterLeave","myCards","start","GSMgr","registerOpCodeCallback","ServerCode","RP_ENTER_SEAT","onPlayerEnterSeat","bind","RP_LEAVE_SEAT","onPlayerLeaveSeat","RP_LOAD_MATCH","onMatchLoad","RP_HOST_CHANGE","onHostChange","RP_STATE_UPDATE","onGameStateUpdate","RP_GET_CARDS","onCardsReceived","RP_TURN_CHANGE","onTurnChange","RP_THROW_SUCCESS","onThrowSuccess","RP_GAME_RESULT","onGameResult","RP_REGISTER_LEAVE","onPlayerRegisterLeave","onInit","startGameScene","Seats","UIManager","refreshSeats","State","Define","GameState","RUNNING","TurnKeeper","TimeBeginTurn","Timeout","CurrentCards","PreviousThrowPlayerId","OnMatchFound","message","console","log","JSON","stringify","onlineList","participants","OnMatchUpdate","hasOwnProperty","player","filter","id","addedPlayers","addPlayer","removedPlayers","removePlayer","onMatchLoaded","callback","onMatchLoadedCb","parse","getString","getCurrentSeats","getMycards","getPlayer","getOnlineList","getHost","Host","IsMeHost","userId","IsHost","playerId","UpdateUserInfo","getMyId","getMySeat","MySeat","IsMyId","getOnlineSeatCount","Object","keys","length","seat","getLong","playerEnterSeat","onPlayerReady","isReady","PlayerReady","push","index","indexOf","splice","playerLeaveSeat","setHost","WAITING","onGameStateWaiting","READY","timeStamp","onGameStateReady","GAMEOVER","onGameOver","STARTED","onGameStart","onGameWaiting","cards","sort","a","b","scores","playerWinId","playersCards","i","seats","displayResult","isLeave","IsRegisterLeave"],"mappings":"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","file":"GameMgr.js","sourceRoot":"../../../../../assets/Script/Game","sourcesContent":["var GameMgr = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    statics: {\r\n        instance: null\r\n    },\r\n\r\n    onLoad() {\r\n        GameMgr.instance = this;\r\n        cc.game.addPersistRootNode(this.node);\r\n        this.matchData = {};\r\n        this.RegisterLeave = 0;\r\n        this.myCards = null;\r\n        //this.matchData.PlayerReady = [];\r\n    },\r\n\r\n    start() {\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_ENTER_SEAT, this.onPlayerEnterSeat.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LEAVE_SEAT, this.onPlayerLeaveSeat.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LOAD_MATCH, this.onMatchLoad.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_HOST_CHANGE, this.onHostChange.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_STATE_UPDATE, this.onGameStateUpdate.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_GET_CARDS, this.onCardsReceived.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_TURN_CHANGE, this.onTurnChange.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_THROW_SUCCESS, this.onThrowSuccess.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_GAME_RESULT, this.onGameResult.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_REGISTER_LEAVE, this.onPlayerRegisterLeave.bind(this));\r\n        //GSMgr.instance.registerOpCodeCallback(ServerCode.RP_PLAYER_READY, this.onPlayerReady.bind(this));\r\n        //remove design ready\r\n    },\r\n\r\n    onInit() {\r\n        this.startGameScene = true;\r\n        //this.matchData.Host && UIManager.instance.setHost(this.matchData.Host);\r\n        this.matchData.Seats && UIManager.instance.refreshSeats(this.matchData.Seats);\r\n        if (this.matchData.State == Define.GameState.RUNNING)\r\n        {\r\n            this.myCards && UIManager.instance.onCardsReceived(this.myCards, false);\r\n            this.matchData.TurnKeeper && UIManager.instance.onTurnChange(this.matchData.TurnKeeper, this.matchData.TimeBeginTurn, this.matchData.Timeout);\r\n            this.matchData.CurrentCards && UIManager.instance.onThrowSuccess(this.matchData.PreviousThrowPlayerId, this.matchData.CurrentCards);\r\n        }\r\n    },\r\n\r\n    OnMatchFound(message) {\r\n        console.log(\"Game on match found \" + JSON.stringify(message));\r\n        this.onlineList = message.participants;\r\n    },\r\n\r\n    OnMatchUpdate(message) {\r\n        console.log(\"Game on match update \" + JSON.stringify(message));\r\n        this.onlineList = message.participants;\r\n        if (message.hasOwnProperty(\"addedPlayers\")) {\r\n            let player = this.onlineList.filter(player => player.id == message.addedPlayers)[0];\r\n            UIManager.instance.addPlayer(player);\r\n        }\r\n        if (message.hasOwnProperty(\"removedPlayers\")) {\r\n            let player = message.removedPlayers[0];\r\n            UIManager.instance.removePlayer(player);\r\n        }\r\n    },\r\n\r\n    onMatchLoaded(callback) {\r\n        this.onMatchLoadedCb = callback;\r\n    },\r\n\r\n    onMatchLoad(message) {\r\n        this.matchData = JSON.parse(message.getString(1));\r\n        if (this.onMatchLoadedCb)\r\n            this.onMatchLoadedCb();\r\n    },\r\n\r\n    getCurrentSeats() {\r\n        if (this.matchData)\r\n            return this.matchData.Seats;\r\n        return {};\r\n    },\r\n\r\n    getMycards() {\r\n        return this.myCards;\r\n    },\r\n\r\n    getPlayer(id) {\r\n        return this.onlineList.filter(player => player.id == id)[0];\r\n    },\r\n\r\n    getOnlineList() {\r\n        return this.onlineList;\r\n    },\r\n\r\n    getHost() {\r\n        return this.matchData.Host;\r\n    },\r\n\r\n    IsMeHost()\r\n    {\r\n        return (this.userId == this.matchData.Host || this.matchData.Host == null);\r\n    },\r\n\r\n    IsHost(playerId)\r\n    {\r\n        return (playerId == this.matchData.Host || this.matchData.Host == null);\r\n    },\r\n\r\n    UpdateUserInfo(message) {\r\n        this.userId = message.userId;\r\n    },\r\n\r\n    getMyId() {\r\n        return this.userId;\r\n    },\r\n\r\n    getMySeat() {\r\n        return this.MySeat;\r\n    },\r\n\r\n    IsMyId(id) {\r\n        return this.userId == id;\r\n    },\r\n\r\n    getOnlineSeatCount() {\r\n        return Object.keys(this.matchData.Seats).length;\r\n    },\r\n\r\n    onPlayerEnterSeat(message) {\r\n        let playerId = message.getString(1);\r\n        let seat = message.getLong(2);\r\n        this.matchData.Seats[seat] = playerId;\r\n        UIManager.instance.playerEnterSeat(this.getPlayer(playerId), seat);\r\n\r\n        if (this.IsMyId(playerId)) {\r\n            this.MySeat = seat;\r\n        }\r\n    },\r\n\r\n    onPlayerReady(message) {\r\n        let playerId = message.getString(1);\r\n        let isReady = message.getLong(2);\r\n        if (isReady)\r\n        {\r\n            this.matchData.PlayerReady.push(playerId);\r\n        }\r\n        else\r\n        {\r\n            let index = this.matchData.PlayerReady.indexOf(playerId);\r\n            this.matchData.PlayerReady.splice(index, 1);\r\n        }\r\n        UIManager.instance.onPlayerReady(playerId, isReady);\r\n    },\r\n\r\n    onPlayerLeaveSeat(message) {\r\n        let playerId = message.getString(1);\r\n        let seat = message.getLong(2);\r\n        this.matchData.Seats[seat] = null;\r\n        UIManager.instance.playerLeaveSeat(seat);\r\n\r\n        if (this.IsMyId(playerId)) {\r\n            this.MySeat = null;\r\n        }\r\n    },\r\n\r\n    onHostChange(message) {\r\n        let playerId = message.getString(1);\r\n        this.matchData.Host = playerId;\r\n        UIManager.instance.setHost(this.matchData.Host);\r\n    },\r\n\r\n    onGameStateUpdate(message) {\r\n        this.matchData.State = message.getLong(1);\r\n        console.log('GameState Change ' + this.matchData.State);\r\n        switch (this.matchData.State) {\r\n            case Define.GameState.WAITING:\r\n                this.onGameStateWaiting();\r\n                break;\r\n\r\n            case Define.GameState.READY:\r\n                let timeStamp = message.getLong(2);\r\n                this.onGameStateReady(timeStamp);\r\n                break;\r\n\r\n            case Define.GameState.GAMEOVER:\r\n                this.onGameOver();\r\n                break;\r\n\r\n            case Define.GameState.STARTED:\r\n                this.onGameStart();\r\n                break;\r\n        }\r\n    },\r\n\r\n    onGameStateWaiting() {\r\n        UIManager.instance.onGameWaiting();\r\n    },\r\n\r\n    onGameStateReady(timeStamp) {\r\n        UIManager.instance.onGameStateReady(timeStamp);\r\n    },\r\n\r\n    onGameOver() {\r\n        UIManager.instance.onGameOver();\r\n    },\r\n\r\n    onCardsReceived(message) {\r\n        let cards = JSON.parse(message.getString(1));\r\n        cards.sort((a, b) => a - b);\r\n        this.myCards = cards;\r\n        UIManager.instance && UIManager.instance.onCardsReceived(this.myCards, true);\r\n    },\r\n\r\n    onTurnChange(message) {\r\n        this.matchData.TurnKeeper = message.getString(1);\r\n        this.matchData.TimeBeginTurn = message.getLong(2);\r\n        this.matchData.Timeout = message.getLong(3);\r\n        UIManager.instance.onTurnChange(this.matchData.TurnKeeper, this.matchData.TimeBeginTurn, this.matchData.Timeout);\r\n    },\r\n\r\n    onThrowSuccess(message) {\r\n        this.matchData.PreviousThrowPlayerId = message.getString(1);\r\n        this.matchData.CurrentCards = JSON.parse(message.getString(2));\r\n        UIManager.instance.onThrowSuccess(this.matchData.PreviousThrowPlayerId, this.matchData.CurrentCards);\r\n    },\r\n\r\n    onGameResult(message)\r\n    {\r\n        let scores = JSON.parse(message.getString(1));\r\n        let playerWinId = message.getString(2);\r\n        let playersCards = {};\r\n        for(var i = 0, seats = this.getOnlineSeatCount(); i < seats; i++)\r\n        {\r\n            let playerId = message.getString(3 + i * 2);\r\n            let cards = JSON.parse(message.getString(3 + i * 2 + 1));\r\n            playersCards[playerId] = cards;\r\n        }\r\n        UIManager.instance.displayResult(scores, playerWinId, playersCards);\r\n    },\r\n\r\n    onPlayerRegisterLeave(message)\r\n    {\r\n        let isLeave = message.getLong(1);\r\n        this.RegisterLeave = isLeave;\r\n        UIManager.instance.onPlayerRegisterLeave(isLeave);\r\n    },\r\n\r\n    IsRegisterLeave()\r\n    {\r\n        return this.RegisterLeave;\r\n    },\r\n\r\n    onGameStart()\r\n    {\r\n        UIManager.instance.onGameStart();\r\n    },\r\n});"]}