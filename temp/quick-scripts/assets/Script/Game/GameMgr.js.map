{"version":3,"sources":["GameMgr.js"],"names":["Define","require","GameMgr","cc","Class","extends","Component","statics","instance","onLoad","game","addPersistRootNode","node","matchData","start","GSMgr","registerOpCodeCallback","ServerCode","RP_ENTER_SEAT","onPlayerEnterSeat","bind","RP_LEAVE_SEAT","onPlayerLeaveSeat","RP_LOAD_MATCH","onMatchLoad","RP_HOST_CHANGE","onHostChange","RP_STATE_UPDATE","onGameStateUpdate","RP_GET_CARDS","onCardsReceived","RP_TURN_CHANGE","onTurnChange","RP_THROW_SUCCESS","onThrowSuccess","onInit","startGameScene","OnMatchFound","message","console","log","JSON","stringify","onlineList","participants","OnMatchUpdate","hasOwnProperty","player","filter","id","addedPlayers","UIManager","addPlayer","removedPlayers","removePlayer","onMatchLoaded","callback","onMatchLoadedCb","parse","getString","getCurrentSeats","Seats","getPlayer","getOnlineList","getHost","Host","UpdateUserInfo","userId","getMyId","getMySeat","MySeat","IsMyId","playerId","seat","getLong","playerEnterSeat","playerLeaveSeat","setHost","State","GameState","WAITING","onGameStateWaiting","READY","onGameStateReady","enableStartButton","cards","sort","a","b","startTime","timeout","TurnKeeper","TimeBeginTurn"],"mappings":"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","file":"GameMgr.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Game","sourcesContent":["var Define = require(\"Define\");\r\nvar GameMgr = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    statics: {\r\n        instance: null\r\n    },\r\n\r\n    onLoad()\r\n    {\r\n        GameMgr.instance = this;\r\n        cc.game.addPersistRootNode(this.node);\r\n        this.matchData={};\r\n    },\r\n\r\n    start()\r\n    {\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_ENTER_SEAT, this.onPlayerEnterSeat.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LEAVE_SEAT, this.onPlayerLeaveSeat.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LOAD_MATCH, this.onMatchLoad.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_HOST_CHANGE, this.onHostChange.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_STATE_UPDATE, this.onGameStateUpdate.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_GET_CARDS, this.onCardsReceived.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_TURN_CHANGE, this.onTurnChange.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_THROW_SUCCESS, this.onThrowSuccess.bind(this));\r\n    },\r\n\r\n    onInit()\r\n    {\r\n        this.startGameScene = true;\r\n    },\r\n\r\n    OnMatchFound(message)\r\n    {\r\n        console.log(\"Game on match found \" + JSON.stringify(message));\r\n        this.onlineList = message.participants;\r\n    },\r\n\r\n    OnMatchUpdate(message)\r\n    {\r\n        console.log(\"Game on match update \" + JSON.stringify(message));\r\n        this.onlineList = message.participants;\r\n        if (message.hasOwnProperty(\"addedPlayers\"))\r\n        {\r\n            let player = this.onlineList.filter(player => player.id == message.addedPlayers)[0];\r\n                UIManager.instance.addPlayer(player);\r\n        }\r\n        if (message.hasOwnProperty(\"removedPlayers\"))\r\n        {\r\n            let player = message.removedPlayers[0];\r\n                UIManager.instance.removePlayer(player);\r\n        }\r\n    },\r\n\r\n    onMatchLoaded(callback)\r\n    {\r\n        this.onMatchLoadedCb = callback;\r\n    },\r\n\r\n    onMatchLoad(message)\r\n    {\r\n        this.matchData = JSON.parse(message.getString(1));\r\n        if (this.onMatchLoadedCb)\r\n            this.onMatchLoadedCb();\r\n    },\r\n\r\n    getCurrentSeats()\r\n    {\r\n        if (this.matchData)\r\n            return this.matchData.Seats;\r\n        return {};\r\n    },\r\n\r\n    getPlayer(id)\r\n    {\r\n        return this.onlineList.filter(player => player.id == id)[0];\r\n    },\r\n\r\n    getOnlineList()\r\n    {\r\n        return this.onlineList;\r\n    },\r\n\r\n    getHost()\r\n    {\r\n        return this.matchData.Host;\r\n    },\r\n\r\n    UpdateUserInfo(message) {\r\n        this.userId = message.userId;\r\n    },\r\n\r\n    getMyId()\r\n    {\r\n        return this.userId;\r\n    },\r\n\r\n    getMySeat()\r\n    {\r\n        return this.MySeat;\r\n    },\r\n\r\n    IsMyId(id)\r\n    {\r\n        return this.userId == id;\r\n    },\r\n\r\n    onPlayerEnterSeat(message)\r\n    {\r\n        let playerId = message.getString(1);\r\n        let seat = message.getLong(2);\r\n            this.matchData.Seats[seat] = playerId;\r\n            UIManager.instance.playerEnterSeat(this.getPlayer(playerId), seat);\r\n\r\n        if (this.IsMyId(playerId))\r\n        {\r\n            this.MySeat = seat;\r\n        }\r\n    },\r\n\r\n    onPlayerLeaveSeat(message)\r\n    {\r\n        let playerId = message.getString(1);\r\n        let seat = message.getLong(2);\r\n            this.matchData.Seats[seat] = null;\r\n            UIManager.instance.playerLeaveSeat(seat);\r\n        \r\n        if (this.IsMyId(playerId))\r\n        {\r\n            this.MySeat = null;\r\n        }\r\n    },\r\n\r\n    onHostChange(message)\r\n    {\r\n        let playerId = message.getString(1);\r\n            this.matchData.Host = playerId;\r\n            UIManager.instance.setHost(playerId);\r\n    },\r\n\r\n    onGameStateUpdate(message)\r\n    {\r\n        cc.log(\"onGameStateUpdate\");\r\n        this.matchData.State = message.getLong(1);\r\n        switch (this.matchData.State)\r\n        {\r\n            case Define.GameState.WAITING:\r\n                this.onGameStateWaiting();\r\n            break;\r\n\r\n            case Define.GameState.READY:\r\n                this.onGameStateReady();\r\n            break;\r\n        }\r\n    },\r\n\r\n    onGameStateWaiting()\r\n    {\r\n        if (this.IsMyId(this.matchData.Host))\r\n            UIManager.instance.enableStartButton(false);\r\n    },\r\n\r\n    onGameStateReady()\r\n    {\r\n        if (this.IsMyId(this.matchData.Host))\r\n            UIManager.instance.enableStartButton(true);\r\n    },\r\n\r\n    onCardsReceived(message)\r\n    {\r\n        let cards = JSON.parse(message.getString(1));\r\n        cards.sort((a,b) => a - b);\r\n        UIManager.instance.onCardsReceived(cards);\r\n    },\r\n\r\n    onTurnChange(message)\r\n    {\r\n        let playerId = message.getString(1);\r\n        let startTime = message.getLong(2);\r\n        let timeout = message.getLong(3);\r\n        this.matchData.TurnKeeper = playerId;\r\n        this.matchData.TimeBeginTurn = startTime;\r\n        UIManager.instance.onTurnChange(playerId, startTime, timeout);\r\n    },\r\n\r\n    onThrowSuccess(message)\r\n    {\r\n        var playerId = message.getString(1);\r\n        var cards = JSON.parse(message.getString(2));\r\n        UIManager.instance.onThrowSuccess(playerId, cards);\r\n        cc.log(\"THROW SUCCESS!\" + cards);\r\n    }\r\n});"]}