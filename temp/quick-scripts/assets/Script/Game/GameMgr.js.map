{"version":3,"sources":["GameMgr.js"],"names":["GameMgr","cc","Class","extends","Component","statics","instance","onLoad","game","addPersistRootNode","node","matchData","RegisterLeave","myCards","start","GSMgr","registerOpCodeCallback","ServerCode","RP_ENTER_SEAT","onPlayerEnterSeat","bind","RP_LEAVE_SEAT","onPlayerLeaveSeat","RP_LOAD_MATCH","onMatchLoad","RP_HOST_CHANGE","onHostChange","RP_STATE_UPDATE","onGameStateUpdate","RP_GET_CARDS","onCardsReceived","RP_TURN_CHANGE","onTurnChange","RP_THROW_SUCCESS","onThrowSuccess","RP_GAME_RESULT","onGameResult","RP_REGISTER_LEAVE","onPlayerRegisterLeave","onInit","startGameScene","Seats","UIManager","refreshSeats","TurnKeeper","TimeBeginTurn","Timeout","CurrentCards","PreviousThrowPlayerId","OnMatchFound","message","console","log","JSON","stringify","onlineList","participants","OnMatchUpdate","hasOwnProperty","player","filter","id","addedPlayers","addPlayer","removedPlayers","removePlayer","onMatchLoaded","callback","onMatchLoadedCb","parse","getString","getCurrentSeats","getMycards","getPlayer","getOnlineList","getHost","Host","IsMeHost","userId","IsHost","playerId","UpdateUserInfo","getMyId","getMySeat","MySeat","IsMyId","getOnlineSeatCount","Object","keys","length","seat","getLong","playerEnterSeat","onPlayerReady","isReady","PlayerReady","push","index","indexOf","splice","playerLeaveSeat","setHost","State","Define","GameState","WAITING","onGameStateWaiting","READY","timeStamp","onGameStateReady","GAMEOVER","onGameOver","STARTED","onGameStart","onGameWaiting","cards","sort","a","b","scores","playerWinId","playersCards","i","seats","displayResult","isLeave","IsRegisterLeave"],"mappings":"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","file":"GameMgr.js","sourceRoot":"../../../../../assets/Script/Game","sourcesContent":["var GameMgr = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    statics: {\r\n        instance: null\r\n    },\r\n\r\n    onLoad() {\r\n        GameMgr.instance = this;\r\n        cc.game.addPersistRootNode(this.node);\r\n        this.matchData = {};\r\n        this.RegisterLeave = 0;\r\n        this.myCards = null;\r\n        //this.matchData.PlayerReady = [];\r\n    },\r\n\r\n    start() {\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_ENTER_SEAT, this.onPlayerEnterSeat.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LEAVE_SEAT, this.onPlayerLeaveSeat.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_LOAD_MATCH, this.onMatchLoad.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_HOST_CHANGE, this.onHostChange.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_STATE_UPDATE, this.onGameStateUpdate.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_GET_CARDS, this.onCardsReceived.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_TURN_CHANGE, this.onTurnChange.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_THROW_SUCCESS, this.onThrowSuccess.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_GAME_RESULT, this.onGameResult.bind(this));\r\n        GSMgr.instance.registerOpCodeCallback(ServerCode.RP_REGISTER_LEAVE, this.onPlayerRegisterLeave.bind(this));\r\n        //GSMgr.instance.registerOpCodeCallback(ServerCode.RP_PLAYER_READY, this.onPlayerReady.bind(this));\r\n        //remove design ready\r\n    },\r\n\r\n    onInit() {\r\n        this.startGameScene = true;\r\n        //this.matchData.Host && UIManager.instance.setHost(this.matchData.Host);\r\n        this.matchData.Seats && UIManager.instance.refreshSeats(this.matchData.Seats);\r\n        this.myCards && UIManager.instance.onCardsReceived(this.myCards, false);\r\n        this.matchData.TurnKeeper && UIManager.instance.onTurnChange(this.matchData.TurnKeeper, this.matchData.TimeBeginTurn, this.matchData.Timeout);\r\n        this.matchData.CurrentCards && UIManager.instance.onThrowSuccess(this.matchData.PreviousThrowPlayerId, this.matchData.CurrentCards);\r\n    },\r\n\r\n    OnMatchFound(message) {\r\n        console.log(\"Game on match found \" + JSON.stringify(message));\r\n        this.onlineList = message.participants;\r\n    },\r\n\r\n    OnMatchUpdate(message) {\r\n        console.log(\"Game on match update \" + JSON.stringify(message));\r\n        this.onlineList = message.participants;\r\n        if (message.hasOwnProperty(\"addedPlayers\")) {\r\n            let player = this.onlineList.filter(player => player.id == message.addedPlayers)[0];\r\n            UIManager.instance.addPlayer(player);\r\n        }\r\n        if (message.hasOwnProperty(\"removedPlayers\")) {\r\n            let player = message.removedPlayers[0];\r\n            UIManager.instance.removePlayer(player);\r\n        }\r\n    },\r\n\r\n    onMatchLoaded(callback) {\r\n        this.onMatchLoadedCb = callback;\r\n    },\r\n\r\n    onMatchLoad(message) {\r\n        this.matchData = JSON.parse(message.getString(1));\r\n        if (this.onMatchLoadedCb)\r\n            this.onMatchLoadedCb();\r\n    },\r\n\r\n    getCurrentSeats() {\r\n        if (this.matchData)\r\n            return this.matchData.Seats;\r\n        return {};\r\n    },\r\n\r\n    getMycards() {\r\n        return this.myCards;\r\n    },\r\n\r\n    getPlayer(id) {\r\n        return this.onlineList.filter(player => player.id == id)[0];\r\n    },\r\n\r\n    getOnlineList() {\r\n        return this.onlineList;\r\n    },\r\n\r\n    getHost() {\r\n        return this.matchData.Host;\r\n    },\r\n\r\n    IsMeHost()\r\n    {\r\n        return (this.userId == this.matchData.Host || this.matchData.Host == null);\r\n    },\r\n\r\n    IsHost(playerId)\r\n    {\r\n        return (playerId == this.matchData.Host || this.matchData.Host == null);\r\n    },\r\n\r\n    UpdateUserInfo(message) {\r\n        this.userId = message.userId;\r\n    },\r\n\r\n    getMyId() {\r\n        return this.userId;\r\n    },\r\n\r\n    getMySeat() {\r\n        return this.MySeat;\r\n    },\r\n\r\n    IsMyId(id) {\r\n        return this.userId == id;\r\n    },\r\n\r\n    getOnlineSeatCount() {\r\n        return Object.keys(this.matchData.Seats).length;\r\n    },\r\n\r\n    onPlayerEnterSeat(message) {\r\n        let playerId = message.getString(1);\r\n        let seat = message.getLong(2);\r\n        this.matchData.Seats[seat] = playerId;\r\n        UIManager.instance.playerEnterSeat(this.getPlayer(playerId), seat);\r\n\r\n        if (this.IsMyId(playerId)) {\r\n            this.MySeat = seat;\r\n        }\r\n    },\r\n\r\n    onPlayerReady(message) {\r\n        let playerId = message.getString(1);\r\n        let isReady = message.getLong(2);\r\n        if (isReady)\r\n        {\r\n            this.matchData.PlayerReady.push(playerId);\r\n        }\r\n        else\r\n        {\r\n            let index = this.matchData.PlayerReady.indexOf(playerId);\r\n            this.matchData.PlayerReady.splice(index, 1);\r\n        }\r\n        UIManager.instance.onPlayerReady(playerId, isReady);\r\n    },\r\n\r\n    onPlayerLeaveSeat(message) {\r\n        let playerId = message.getString(1);\r\n        let seat = message.getLong(2);\r\n        this.matchData.Seats[seat] = null;\r\n        UIManager.instance.playerLeaveSeat(seat);\r\n\r\n        if (this.IsMyId(playerId)) {\r\n            this.MySeat = null;\r\n        }\r\n    },\r\n\r\n    onHostChange(message) {\r\n        let playerId = message.getString(1);\r\n        this.matchData.Host = playerId;\r\n        UIManager.instance.setHost(this.matchData.Host);\r\n    },\r\n\r\n    onGameStateUpdate(message) {\r\n        this.matchData.State = message.getLong(1);\r\n        console.log('GameState Change ' + this.matchData.State);\r\n        switch (this.matchData.State) {\r\n            case Define.GameState.WAITING:\r\n                this.onGameStateWaiting();\r\n                break;\r\n\r\n            case Define.GameState.READY:\r\n                let timeStamp = message.getLong(2);\r\n                this.onGameStateReady(timeStamp);\r\n                break;\r\n\r\n            case Define.GameState.GAMEOVER:\r\n                this.onGameOver();\r\n                break;\r\n\r\n            case Define.GameState.STARTED:\r\n                this.onGameStart();\r\n                break;\r\n        }\r\n    },\r\n\r\n    onGameStateWaiting() {\r\n        UIManager.instance.onGameWaiting();\r\n    },\r\n\r\n    onGameStateReady(timeStamp) {\r\n        UIManager.instance.onGameStateReady(timeStamp);\r\n    },\r\n\r\n    onGameOver() {\r\n        UIManager.instance.onGameOver();\r\n    },\r\n\r\n    onCardsReceived(message) {\r\n        let cards = JSON.parse(message.getString(1));\r\n        cards.sort((a, b) => a - b);\r\n        this.myCards = cards;\r\n        UIManager.instance && UIManager.instance.onCardsReceived(this.myCards, true);\r\n    },\r\n\r\n    onTurnChange(message) {\r\n        this.matchData.TurnKeeper = message.getString(1);\r\n        this.matchData.TimeBeginTurn = message.getLong(2);\r\n        this.matchData.Timeout = message.getLong(3);\r\n        UIManager.instance.onTurnChange(this.matchData.TurnKeeper, this.matchData.TimeBeginTurn, this.matchData.Timeout);\r\n    },\r\n\r\n    onThrowSuccess(message) {\r\n        this.matchData.PreviousThrowPlayerId = message.getString(1);\r\n        this.matchData.CurrentCards = JSON.parse(message.getString(2));\r\n        UIManager.instance.onThrowSuccess(this.matchData.PreviousThrowPlayerId, this.matchData.CurrentCards);\r\n    },\r\n\r\n    onGameResult(message)\r\n    {\r\n        let scores = JSON.parse(message.getString(1));\r\n        let playerWinId = message.getString(2);\r\n        let playersCards = {};\r\n        for(var i = 0, seats = this.getOnlineSeatCount(); i < seats; i++)\r\n        {\r\n            let playerId = message.getString(3 + i * 2);\r\n            let cards = JSON.parse(message.getString(3 + i * 2 + 1));\r\n            cards.sort((a, b) => a - b);\r\n            playersCards[playerId] = cards;\r\n        }\r\n        UIManager.instance.displayResult(scores, playerWinId, playersCards);\r\n    },\r\n\r\n    onPlayerRegisterLeave(message)\r\n    {\r\n        let isLeave = message.getLong(1);\r\n        this.RegisterLeave = isLeave;\r\n        UIManager.instance.onPlayerRegisterLeave(isLeave);\r\n    },\r\n\r\n    IsRegisterLeave()\r\n    {\r\n        return this.RegisterLeave;\r\n    },\r\n\r\n    onGameStart()\r\n    {\r\n        UIManager.instance.onGameStart();\r\n    },\r\n});"]}