{"version":3,"sources":["ImageCache.js"],"names":["ImageCache","cc","Class","ctor","cachedImages","Init","callback","addRes","id","path","loader","loadRes","err","img","error","bind","load","URL","addImage","console","warn","getImage","loadAvatar","userId","photo","SpriteFrame","getSprite","module","exports"],"mappings":"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","file":"ImageCache.js","sourceRoot":"../../../../../assets/Script/Singleton","sourcesContent":["var ImageCache = cc.Class({\n\n    ctor() {\n        this.cachedImages = {};\n    },\n\n    Init(callback)\n    {\n        this.addRes(\"default\", \"Texture/default\");\n        callback();\n    },\n\n    addRes(id, path) {\n        if (!this.cachedImages[id]) {\n            this.cachedImages[id] = path;\n            cc.loader.loadRes(path, ((err, img) => {\n                if (err) { cc.error(err); return; }\n                this.cachedImages[id] = img;\n            }).bind(this));\n        }\n    },\n\n    load(id, URL) {\n        if (!this.cachedImages[id]) {\n            this.cachedImages[id] = URL;\n            cc.loader.load(URL, ((err, img) => {\n                if (err) { cc.error(err); return; }\n                this.cachedImages[id] = img;\n            }).bind(this));\n        }\n    },\n\n    addImage(id, img)\n    {\n        if (!this.cachedImages[id])\n            this.cachedImages[id] = img;\n        else\n        {\n            console.warn(\"image with id \" + id + \" is already in cached list\");\n        }\n    },\n\n    getImage(id) {\n        if (!this.cachedImages[id]) {\n            console.error(\"Image id: \" + id + \" was not added to cached list\");\n            id = \"default\";\n        }\n        return this.cachedImages[id];\n    },\n\n    loadAvatar(userId, photo, callback)\n    {\n        if (photo == \"default\")\n        {\n            callback(new cc.SpriteFrame(this.cachedImages[photo]));\n        }\n        else if (this.cachedImages[userId])\n        {\n            callback(new cc.SpriteFrame(this.cachedImages[userId]));\n        }\n        else\n        {\n            cc.loader.load(photo, ((err, img) => {\n                if (err)\n                {\n                    callback(null);\n                }\n                this.cachedImages[userId] = img;\n                callback(new cc.SpriteFrame(this.cachedImages[userId]));\n            }).bind(this));\n        }\n    },\n\n    getSprite(id) {\n        return new cc.SpriteFrame(this.getImage(id));\n    },\n});\n\nmodule.exports = new ImageCache();"]}