{"version":3,"sources":["MenuGame.js"],"names":["MenuScene","require","ObjectPool","cc","Class","extends","properties","onlineList","chatBox","SeatMgr","DealCards","ButtonLeave","Node","ButtonStart","ButtonReady","PlayingButtons","myCardNode","friendCardNode","rightPanelNode","showRightButton","Button","showRightLabel","Label","throwButton","skipButton","playZoneNode","countDown","start","active","node","addPlayer","player","removePlayer","requestSeat","sender","seat","console","log","GSMgr","instance","parseInt","requestLeaveSeat","leaveSeat","GameMgr","IsRegisterLeave","playerEnterSeat","playerInfo","onPlayerEnter","IsMyId","id","playerLeaveSeat","getMySeat","enableStartButton","onPlayerLeave","setHost","playerId","enable","chatBoxClick","onlineClick","onStartGameClick","startGame","children","forEach","it","beginNewGame","hideResultIcon","previousCards","previousThrowPlayer","myid","getMyId","PlayDealCardAnim","cards","cardCount","startAnim","card","getCard","setParent","onCardsReceived","onShowRightMenuClick","position","getPosition","string","getSelectedCards","SelectedCards","cardList","getComponentsInChildren","IsSelected","push","throwCards","skipTurn","onTurnChange","startTime","timeout","checkThrowable","interactable","beginNewWave","GameHelper","validTurn","onThrowSuccess","MAX_CARD_ON_HAND","parseCards","removeCardsFromHand","sort","a","b","getChildByName","getComponent","onDeselect","setPosition","onGameWaiting","IsMeHost","hide","length","recall","onGameOver","stopAllTurn","displayResult","scores","playerWinId","playersCards","onPlayerReady","isReady","onReadyPressed","requestPlayerReady","onPlayerRegisterLeave","isLeave","getComponentInChildren","onGameStateReady","timeStamp","show","Define","TIME_FORCE_START","onGameStart"],"mappings":"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","file":"MenuGame.js","sourceRoot":"../../../../../assets/Script/UI","sourcesContent":["\r\nvar MenuScene = require(\"MenuScene\");\r\nvar ObjectPool = require(\"ObjectPool\");\r\n\r\ncc.Class({\r\n    extends: MenuScene,\r\n\r\n    properties: {\r\n        onlineList: require(\"OnlineList\"),\r\n        chatBox: require(\"ChatBox\"),\r\n        SeatMgr: require(\"SeatMgr\"),\r\n        DealCards: require(\"DealCards\"),\r\n        ButtonLeave: cc.Node,\r\n        ButtonStart: cc.Node,\r\n        ButtonReady: cc.Node,\r\n        PlayingButtons: cc.Node,\r\n        myCardNode: cc.Node,\r\n        friendCardNode: cc.Node,\r\n        rightPanelNode: cc.Node,\r\n        showRightButton: cc.Button,\r\n        showRightLabel: cc.Label,\r\n        throwButton: cc.Button,\r\n        skipButton: cc.Button,\r\n        playZoneNode: cc.Node,\r\n        countDown: require(\"CountDown\"),\r\n    },\r\n\r\n    start()\r\n    {\r\n        this.ButtonLeave.active = false;\r\n        this.ButtonStart.active = false;\r\n        this.ButtonReady.active = false;\r\n        this.PlayingButtons.active = false;\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n        //this.seatOccupied = [false, false, false, false];\r\n    },\r\n\r\n    addPlayer(player)\r\n    {\r\n        this.onlineList.addPlayer(player);\r\n    },\r\n\r\n    removePlayer(player)\r\n    {\r\n        this.onlineList.removePlayer(player);\r\n    },\r\n\r\n    requestSeat(sender, seat)\r\n    {\r\n        console.log(\"request Seat\");\r\n        GSMgr.instance.requestSeat(parseInt(seat));\r\n    },\r\n\r\n    requestLeaveSeat()\r\n    {\r\n        GSMgr.instance.leaveSeat(1 - GameMgr.instance.IsRegisterLeave());\r\n    },\r\n\r\n    playerEnterSeat(playerInfo, seat)\r\n    {\r\n        //this.seatOccupied[seat] = true;\r\n        this.SeatMgr.onPlayerEnter(playerInfo, seat);\r\n        if (GameMgr.instance.IsMyId(playerInfo.id))\r\n        {\r\n            this.ButtonLeave.active = true;\r\n        }\r\n    },\r\n\r\n    playerLeaveSeat(seat)\r\n    {\r\n        if (GameMgr.instance.getMySeat() == seat)\r\n        {\r\n            this.ButtonLeave.active = false;\r\n            this.enableStartButton(false);\r\n        }\r\n        this.SeatMgr.onPlayerLeave(seat);\r\n    },\r\n\r\n    setHost(playerId)\r\n    {\r\n        this.SeatMgr.setHost(playerId);\r\n    },\r\n\r\n    enableStartButton(enable) {\r\n        this.ButtonStart.active = enable;\r\n    },\r\n\r\n    chatBoxClick()\r\n    {\r\n        this.onlineList.node.active = false;\r\n        this.chatBox.node.active = true;\r\n    },\r\n\r\n    onlineClick()\r\n    {\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n    },\r\n\r\n    onStartGameClick()\r\n    {\r\n        GSMgr.instance.startGame();\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    beginNewGame()\r\n    {\r\n        this.SeatMgr.hideResultIcon();\r\n        this.PlayingButtons.active = true;\r\n        this.previousCards = null;\r\n        this.previousThrowPlayer = null;\r\n        var myid = GameMgr.instance.getMyId();\r\n    },\r\n\r\n    PlayDealCardAnim(cards)\r\n    {\r\n        let cardCount = 0;\r\n        this.DealCards.startAnim(()=>{\r\n            let card = ObjectPool.instance.getCard(cards[cardCount]);\r\n            card.setParent(this.myCardNode);\r\n            if (cardCount == 0)\r\n            {\r\n                this.friendCardNode.children.forEach(it => it.active = true);\r\n            }\r\n            cardCount += 1;\r\n        });\r\n    },\r\n\r\n    onCardsReceived(cards)\r\n    {\r\n        this.beginNewGame();\r\n        this.ButtonStart.active = false;\r\n        this.PlayDealCardAnim(cards);\r\n    },\r\n\r\n    onShowRightMenuClick()\r\n    {\r\n        var position = this.showRightButton.node.getPosition();\r\n        if (this.rightPanelNode.active == true) {\r\n            this.rightPanelNode.active = false;\r\n            this.showRightLabel.string = \"<<\";\r\n            return;\r\n        }\r\n        this.rightPanelNode.active = true;\r\n        this.showRightLabel.string = \">>\";\r\n    },\r\n\r\n    getSelectedCards()\r\n    {\r\n        var SelectedCards = [];\r\n        let cardList = this.myCardNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                if (card.IsSelected())\r\n                SelectedCards.push(card.getCard());\r\n            })\r\n        return SelectedCards;\r\n    },\r\n\r\n    throwCards()\r\n    {\r\n        let cards = this.getSelectedCards();\r\n        GSMgr.instance.throwCards(cards);\r\n    },\r\n\r\n    skipTurn()\r\n    {\r\n        GSMgr.instance.skipTurn();\r\n    },\r\n\r\n    onTurnChange(playerId, startTime, timeout)\r\n    {\r\n        this.SeatMgr.onTurnChange(playerId, startTime, timeout);\r\n        this.PlayingButtons.active = GameMgr.instance.IsMyId(playerId);\r\n        this.checkThrowable();\r\n        this.skipButton.interactable = true;\r\n        if(this.previousThrowPlayer == playerId)\r\n        {\r\n            this.beginNewWave();\r\n        }\r\n    },\r\n\r\n    beginNewWave()\r\n    {\r\n        this.previousCards = null;\r\n        this.skipButton.interactable = false;\r\n        let cardList = this.playZoneNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                card.node.active = false;\r\n            });\r\n    },\r\n\r\n    checkThrowable()\r\n    {\r\n        this.throwButton.interactable = GameHelper.validTurn(this.previousCards, this.getSelectedCards());\r\n    },\r\n\r\n    onThrowSuccess(playerId, cards)\r\n    {\r\n        const MAX_CARD_ON_HAND = 13;\r\n        this.previousCards = GameHelper.parseCards(cards);\r\n        this.removeCardsFromHand(playerId, cards);\r\n        this.previousThrowPlayer = playerId;\r\n    },\r\n\r\n    removeCardsFromHand(playerId, cards)\r\n    {\r\n        let cardList = this.playZoneNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                card.node.active = false;\r\n            });\r\n            \r\n        cards.sort((a,b) => a - b);\r\n        if(GameMgr.instance.IsMyId(playerId)) {\r\n            cards.forEach(it => {\r\n                let card = this.myCardNode.getChildByName(\"Card_\" + it);\r\n                card.getComponent(\"Card\").onDeselect();\r\n                card.setParent(this.playZoneNode);\r\n                card.setPosition(0, 0);\r\n            });\r\n        } else {\r\n            cards.forEach(it => {\r\n                let card = ObjectPool.instance.getCard(it);                \r\n                card.setParent(this.playZoneNode);\r\n                card.setPosition(0, 0);\r\n            });\r\n        }\r\n    },\r\n\r\n    onGameWaiting()\r\n    {\r\n        if (GameMgr.instance.IsMeHost())\r\n            this.enableStartButton(false);\r\n        \r\n        this.countDown.hide();\r\n        while (this.myCardNode.children.length > 0)\r\n        {\r\n            this.myCardNode.children[0].setPosition(0,0);\r\n            ObjectPool.instance.recall(this.myCardNode.children[0]);\r\n        }\r\n\r\n        while (this.playZoneNode.children.length > 0)\r\n        {\r\n            this.playZoneNode.children[0].setPosition(0,0);\r\n            ObjectPool.instance.recall(this.playZoneNode.children[0]);\r\n        }\r\n\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    onGameOver()\r\n    {\r\n        this.SeatMgr.stopAllTurn();\r\n        this.PlayingButtons.active = false;\r\n        this.previousCards = null;\r\n    },\r\n\r\n    displayResult(scores, playerWinId, playersCards)\r\n    {\r\n        // if(playersCards[playerWinId].length == 13)\r\n        // {\r\n        //     this.PlayDealCardAnim(playersCards[GameMgr.instance.getMyId()]);\r\n        // }\r\n        console.log(scores);\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n        this.SeatMgr.displayResult(playerWinId, playersCards);\r\n    },\r\n\r\n    onPlayerReady(playerId, isReady)\r\n    {\r\n        this.SeatMgr.onPlayerReady(playerId, isReady);\r\n        if (GameMgr.instance.IsMyId(playerId))\r\n        {\r\n            this.ButtonReady.active = !isReady;\r\n        }\r\n    },\r\n\r\n    onReadyPressed()\r\n    {\r\n        GSMgr.instance.requestPlayerReady(true);\r\n    },\r\n\r\n    onPlayerRegisterLeave(isLeave)\r\n    {\r\n        if (isLeave)\r\n            this.ButtonLeave.getComponentInChildren(cc.Label).string = \"Unleave\";\r\n        else\r\n            this.ButtonLeave.getComponentInChildren(cc.Label).string = \"Leave\";\r\n    },\r\n\r\n    onGameStateReady(timeStamp)\r\n    {\r\n        if (GameMgr.instance.IsMeHost())\r\n        {\r\n            this.enableStartButton(true);\r\n        }\r\n        this.countDown.node.active = true;\r\n        this.countDown.show(timeStamp, Define.TIME_FORCE_START);\r\n    },\r\n\r\n    onGameStart()\r\n    {\r\n        this.ButtonStart.active = false;\r\n        this.ButtonReady.active = false;\r\n        this.countDown.hide();\r\n    }\r\n});\r\n"]}