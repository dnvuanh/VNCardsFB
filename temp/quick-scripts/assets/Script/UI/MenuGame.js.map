{"version":3,"sources":["MenuGame.js"],"names":["MenuScene","require","ObjectPool","cc","Class","extends","properties","onlineList","chatBox","SeatMgr","DealCards","ButtonLeave","Node","ButtonStart","ButtonReady","PlayingButtons","myCardNode","friendCardNode","rightPanelNode","showRightButton","Button","showRightLabel","Label","throwButton","playZoneNode","start","active","node","seatOccupied","addPlayer","player","removePlayer","requestSeat","sender","seat","console","log","GSMgr","instance","parseInt","requestLeaveSeat","leaveSeat","GameMgr","getMySeat","playerEnterSeat","playerInfo","onPlayerEnter","IsMyId","id","IsHost","playerLeaveSeat","enableStartButton","onPlayerLeave","setHost","playerId","enable","chatBoxClick","onlineClick","onStartGameClick","startGame","children","forEach","it","onCardsReceived","cards","cardCount","startAnim","card","getCard","setParent","previousCards","previousThrowPlayer","onShowRightMenuClick","position","getPosition","string","getSelectedCards","SelectedCards","cardList","getComponentsInChildren","IsSelected","push","throwCards","skipTurn","onTurnChange","startTime","timeout","interactable","checkThrowable","GameHelper","validTurn","onThrowSuccess","parseCards","removeCardsFromHand","idx","OFFSET","sort","a","b","getChildByName","x","onGameOver","stopAllTurn","displayResult","scores","onPlayerReady","isReady"],"mappings":"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","file":"MenuGame.js","sourceRoot":"../../../../../assets/Script/UI","sourcesContent":["\r\nvar MenuScene = require(\"MenuScene\");\r\nvar ObjectPool = require(\"ObjectPool\");\r\n\r\ncc.Class({\r\n    extends: MenuScene,\r\n\r\n    properties: {\r\n        onlineList: require(\"OnlineList\"),\r\n        chatBox: require(\"ChatBox\"),\r\n        SeatMgr: require(\"SeatMgr\"),\r\n        DealCards: require(\"DealCards\"),\r\n        ButtonLeave: cc.Node,\r\n        ButtonStart: cc.Node,\r\n        ButtonReady: cc.Node,\r\n        PlayingButtons: cc.Node,\r\n        myCardNode: cc.Node,\r\n        friendCardNode: cc.Node,\r\n        rightPanelNode: cc.Node,\r\n        showRightButton: cc.Button,\r\n        showRightLabel: cc.Label,\r\n        throwButton: cc.Button,\r\n        playZoneNode: cc.Node,\r\n    },\r\n\r\n    start()\r\n    {\r\n        this.ButtonLeave.active = false;\r\n        this.ButtonStart.active = false;\r\n        this.ButtonReady.active = false;\r\n        this.PlayingButtons.active = false;\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n        this.seatOccupied = [false, false, false, false];\r\n    },\r\n\r\n    addPlayer(player)\r\n    {\r\n        this.onlineList.addPlayer(player);\r\n    },\r\n\r\n    removePlayer(player)\r\n    {\r\n        this.onlineList.removePlayer(player);\r\n    },\r\n\r\n    requestSeat(sender, seat)\r\n    {\r\n        console.log(\"request Seat\");\r\n        GSMgr.instance.requestSeat(parseInt(seat));\r\n    },\r\n\r\n    requestLeaveSeat()\r\n    {\r\n        GSMgr.instance.leaveSeat(GameMgr.instance.getMySeat());\r\n    },\r\n\r\n    playerEnterSeat(playerInfo, seat)\r\n    {\r\n        this.seatOccupied[seat] = true;\r\n        this.SeatMgr.onPlayerEnter(playerInfo, seat);\r\n        if (GameMgr.instance.IsMyId(playerInfo.id))\r\n        {\r\n            this.ButtonLeave.active = true;\r\n            this.ButtonReady.active = !GameMgr.instance.IsHost(playerInfo.id);\r\n        }\r\n    },\r\n\r\n    playerLeaveSeat(seat)\r\n    {\r\n        if (GameMgr.instance.getMySeat() == seat)\r\n        {\r\n            this.ButtonLeave.active = false;\r\n            this.enableStartButton(false);\r\n        }\r\n        this.SeatMgr.onPlayerLeave(seat);\r\n    },\r\n\r\n    setHost(playerId)\r\n    {\r\n        this.SeatMgr.setHost(playerId);\r\n    },\r\n\r\n    enableStartButton(enable) {\r\n        this.ButtonStart.active = enable;\r\n    },\r\n\r\n    chatBoxClick()\r\n    {\r\n        this.onlineList.node.active = false;\r\n        this.chatBox.node.active = true;\r\n    },\r\n\r\n    onlineClick()\r\n    {\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n    },\r\n\r\n    onStartGameClick()\r\n    {\r\n        GSMgr.instance.startGame();\r\n        this.ButtonStart.active = false;\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    onCardsReceived(cards)\r\n    {\r\n        let cardCount = 0;\r\n        this.DealCards.startAnim(()=>{\r\n            let card = ObjectPool.instance.getCard(cards[cardCount]);\r\n                card.setParent(this.myCardNode);\r\n            if (cardCount == 0)\r\n            {\r\n                this.friendCardNode.children.forEach(it => it.active = true);\r\n            }\r\n            cardCount += 1;\r\n        });\r\n        this.PlayingButtons.active = true;\r\n        this.previousCards = null;\r\n        this.previousThrowPlayer = null;\r\n    },\r\n\r\n    onShowRightMenuClick()\r\n    {\r\n        var position = this.showRightButton.node.getPosition();\r\n        if (this.rightPanelNode.active == true) {\r\n            this.rightPanelNode.active = false;\r\n            this.showRightLabel.string = \"<<\";\r\n            return;\r\n        }\r\n        this.rightPanelNode.active = true;\r\n        this.showRightLabel.string = \">>\";\r\n    },\r\n\r\n    getSelectedCards()\r\n    {\r\n        var SelectedCards = [];\r\n        let cardList = this.myCardNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                if (card.IsSelected())\r\n                SelectedCards.push(card.getCard());\r\n            })\r\n        return SelectedCards;\r\n    },\r\n\r\n    throwCards()\r\n    {\r\n        let cards = this.getSelectedCards();\r\n        GSMgr.instance.throwCards(cards);\r\n    },\r\n\r\n    skipTurn()\r\n    {\r\n        GSMgr.instance.skipTurn();\r\n    },\r\n\r\n    onTurnChange(playerId, startTime, timeout)\r\n    {\r\n        this.SeatMgr.onTurnChange(playerId, startTime, timeout);\r\n        if(GameMgr.instance.IsMyId(playerId))   {\r\n            this.PlayingButtons.active = true;\r\n        } else {\r\n            this.PlayingButtons.active = false;\r\n        }\r\n        this.throwButton.interactable = false;\r\n        if(this.previousThrowPlayer == playerId)\r\n        {\r\n            this.previousCards = null;\r\n        }\r\n    },\r\n\r\n    checkThrowable(enable)\r\n    {\r\n        if(GameHelper.validTurn(this.previousCards, this.getSelectedCards())) {\r\n            this.throwButton.interactable = true;\r\n        }\r\n        else {\r\n            this.throwButton.interactable = false;\r\n        }\r\n    },\r\n\r\n    onThrowSuccess(playerId, cards)\r\n    {\r\n        this.previousCards = GameHelper.parseCards(cards);\r\n        this.removeCardsFromHand(playerId, cards);\r\n        this.previousThrowPlayer = playerId;\r\n    },\r\n\r\n    removeCardsFromHand(playerId, cards)\r\n    {\r\n        let idx = 0;\r\n        const OFFSET = 50;\r\n        cards.sort((a,b) => a - b);\r\n        if(GameMgr.instance.IsMyId(playerId)) {\r\n            cards.forEach(it => {\r\n                let card = this.myCardNode.getChildByName(\"Card_\" + it);\r\n                card.setParent(this.playZoneNode);\r\n                card.x = idx++ * OFFSET;\r\n            });\r\n        } else {\r\n            cards.forEach(it => {\r\n                let card = ObjectPool.instance.getCard(it);\r\n                card.setParent(this.playZoneNode);\r\n                card.x = idx++ * OFFSET;\r\n            });\r\n        }\r\n    },\r\n\r\n    onGameOver()\r\n    {\r\n        this.SeatMgr.stopAllTurn();\r\n    },\r\n\r\n    displayResult(scores)\r\n    {\r\n        console.log(scores);\r\n    },\r\n\r\n    onPlayerReady(playerId, isReady)\r\n    {\r\n        this.SeatMgr.onPlayerReady(playerId, isReady);\r\n    },\r\n});\r\n"]}