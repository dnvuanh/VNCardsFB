{"version":3,"sources":["MenuGame.js"],"names":["MenuScene","require","ObjectPool","cc","Class","extends","properties","onlineList","chatBox","SeatMgr","DealCards","ButtonLeave","Node","ButtonStart","ButtonReady","PlayingButtons","myCardNode","friendCardNode","rightPanelNode","showRightButton","Button","showRightLabel","Label","throwButton","skipButton","playZoneNode","countDown","start","active","node","seatOccupied","addPlayer","player","removePlayer","requestSeat","sender","seat","console","log","GSMgr","instance","parseInt","requestLeaveSeat","leaveSeat","GameMgr","IsRegisterLeave","playerEnterSeat","playerInfo","onPlayerEnter","IsMyId","id","playerLeaveSeat","getMySeat","enableStartButton","onPlayerLeave","setHost","playerId","enable","chatBoxClick","onlineClick","onStartGameClick","startGame","children","forEach","it","beginNewGame","hideResultIcon","previousCards","previousThrowPlayer","myid","getMyId","CardsOnHand","onCardsReceived","cards","cardCount","startAnim","card","getCard","setParent","onShowRightMenuClick","position","getPosition","string","getSelectedCards","SelectedCards","cardList","getComponentsInChildren","IsSelected","push","throwCards","skipTurn","onTurnChange","startTime","timeout","checkThrowable","interactable","beginNewWave","GameHelper","validTurn","onThrowSuccess","MAX_CARD_ON_HAND","parseCards","removeCardsFromHand","hasOwnProperty","length","onPlayerFinished","idx","OFFSET","sort","a","b","getChildByName","getComponent","onDeselect","x","onGameWaiting","IsMeHost","hide","setPosition","recall","onGameOver","stopAllTurn","displayResult","scores","onPlayerReady","isReady","onReadyPressed","requestPlayerReady","onPlayerRegisterLeave","isLeave","getComponentInChildren","onGameStateReady","timeStamp","show","Define","TIME_FORCE_START","onGameStart"],"mappings":";;;;;;;;AACA,IAAIA,YAAYC,QAAQ,WAAR,CAAhB;AACA,IAAIC,aAAaD,QAAQ,YAAR,CAAjB;;AAEAE,GAAGC,KAAH,CAAS;AACLC,aAASL,SADJ;;AAGLM,gBAAY;AACRC,oBAAYN,QAAQ,YAAR,CADJ;AAERO,iBAASP,QAAQ,SAAR,CAFD;AAGRQ,iBAASR,QAAQ,SAAR,CAHD;AAIRS,mBAAWT,QAAQ,WAAR,CAJH;AAKRU,qBAAaR,GAAGS,IALR;AAMRC,qBAAaV,GAAGS,IANR;AAORE,qBAAaX,GAAGS,IAPR;AAQRG,wBAAgBZ,GAAGS,IARX;AASRI,oBAAYb,GAAGS,IATP;AAURK,wBAAgBd,GAAGS,IAVX;AAWRM,wBAAgBf,GAAGS,IAXX;AAYRO,yBAAiBhB,GAAGiB,MAZZ;AAaRC,wBAAgBlB,GAAGmB,KAbX;AAcRC,qBAAapB,GAAGiB,MAdR;AAeRI,oBAAYrB,GAAGiB,MAfP;AAgBRK,sBAActB,GAAGS,IAhBT;AAiBRc,mBAAWzB,QAAQ,WAAR;AAjBH,KAHP;;AAuBL0B,SAvBK,mBAwBL;AACI,aAAKhB,WAAL,CAAiBiB,MAAjB,GAA0B,KAA1B;AACA,aAAKf,WAAL,CAAiBe,MAAjB,GAA0B,KAA1B;AACA,aAAKd,WAAL,CAAiBc,MAAjB,GAA0B,KAA1B;AACA,aAAKb,cAAL,CAAoBa,MAApB,GAA6B,KAA7B;AACA,aAAKrB,UAAL,CAAgBsB,IAAhB,CAAqBD,MAArB,GAA8B,IAA9B;AACA,aAAKpB,OAAL,CAAaqB,IAAb,CAAkBD,MAAlB,GAA2B,KAA3B;AACA,aAAKE,YAAL,GAAoB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAApB;AACH,KAhCI;AAkCLC,aAlCK,qBAkCKC,MAlCL,EAmCL;AACI,aAAKzB,UAAL,CAAgBwB,SAAhB,CAA0BC,MAA1B;AACH,KArCI;AAuCLC,gBAvCK,wBAuCQD,MAvCR,EAwCL;AACI,aAAKzB,UAAL,CAAgB0B,YAAhB,CAA6BD,MAA7B;AACH,KA1CI;AA4CLE,eA5CK,uBA4COC,MA5CP,EA4CeC,IA5Cf,EA6CL;AACIC,gBAAQC,GAAR,CAAY,cAAZ;AACAC,cAAMC,QAAN,CAAeN,WAAf,CAA2BO,SAASL,IAAT,CAA3B;AACH,KAhDI;AAkDLM,oBAlDK,8BAmDL;AACIH,cAAMC,QAAN,CAAeG,SAAf,CAAyB,IAAIC,QAAQJ,QAAR,CAAiBK,eAAjB,EAA7B;AACH,KArDI;AAuDLC,mBAvDK,2BAuDWC,UAvDX,EAuDuBX,IAvDvB,EAwDL;AACI,aAAKN,YAAL,CAAkBM,IAAlB,IAA0B,IAA1B;AACA,aAAK3B,OAAL,CAAauC,aAAb,CAA2BD,UAA3B,EAAuCX,IAAvC;AACA,YAAIQ,QAAQJ,QAAR,CAAiBS,MAAjB,CAAwBF,WAAWG,EAAnC,CAAJ,EACA;AACI,iBAAKvC,WAAL,CAAiBiB,MAAjB,GAA0B,IAA1B;AACA;AACH;AACJ,KAhEI;AAkELuB,mBAlEK,2BAkEWf,IAlEX,EAmEL;AACI,YAAIQ,QAAQJ,QAAR,CAAiBY,SAAjB,MAAgChB,IAApC,EACA;AACI,iBAAKzB,WAAL,CAAiBiB,MAAjB,GAA0B,KAA1B;AACA,iBAAKyB,iBAAL,CAAuB,KAAvB;AACH;AACD,aAAK5C,OAAL,CAAa6C,aAAb,CAA2BlB,IAA3B;AACH,KA1EI;AA4ELmB,WA5EK,mBA4EGC,QA5EH,EA6EL;AACI,aAAK/C,OAAL,CAAa8C,OAAb,CAAqBC,QAArB;AACH,KA/EI;AAiFLH,qBAjFK,6BAiFaI,MAjFb,EAiFqB;AACtB,aAAK5C,WAAL,CAAiBe,MAAjB,GAA0B6B,MAA1B;AACH,KAnFI;AAqFLC,gBArFK,0BAsFL;AACI,aAAKnD,UAAL,CAAgBsB,IAAhB,CAAqBD,MAArB,GAA8B,KAA9B;AACA,aAAKpB,OAAL,CAAaqB,IAAb,CAAkBD,MAAlB,GAA2B,IAA3B;AACH,KAzFI;AA2FL+B,eA3FK,yBA4FL;AACI,aAAKpD,UAAL,CAAgBsB,IAAhB,CAAqBD,MAArB,GAA8B,IAA9B;AACA,aAAKpB,OAAL,CAAaqB,IAAb,CAAkBD,MAAlB,GAA2B,KAA3B;AACH,KA/FI;AAiGLgC,oBAjGK,8BAkGL;AACIrB,cAAMC,QAAN,CAAeqB,SAAf;AACA,aAAK5C,cAAL,CAAoB6C,QAApB,CAA6BC,OAA7B,CAAqC;AAAA,mBAAMC,GAAGpC,MAAH,GAAY,KAAlB;AAAA,SAArC;AACH,KArGI;AAuGLqC,gBAvGK,0BAwGL;AACI,aAAKxD,OAAL,CAAayD,cAAb;AACA,aAAKnD,cAAL,CAAoBa,MAApB,GAA6B,IAA7B;AACA,aAAKuC,aAAL,GAAqB,IAArB;AACA,aAAKC,mBAAL,GAA2B,IAA3B;AACA,YAAIC,OAAOzB,QAAQJ,QAAR,CAAiB8B,OAAjB,EAAX;AACA,aAAKC,WAAL,uBAAqBF,IAArB,EAA6B,EAA7B;AAEH,KAhHI;AAkHLG,mBAlHK,2BAkHWC,KAlHX,EAmHL;AAAA;;AACI,aAAKR,YAAL;AACA,aAAKpD,WAAL,CAAiBe,MAAjB,GAA0B,KAA1B;AACA,YAAI8C,YAAY,CAAhB;AACA,aAAKhE,SAAL,CAAeiE,SAAf,CAAyB,YAAI;AACzB,gBAAIC,OAAO1E,WAAWsC,QAAX,CAAoBqC,OAApB,CAA4BJ,MAAMC,SAAN,CAA5B,CAAX;AACAE,iBAAKE,SAAL,CAAe,MAAK9D,UAApB;AACA,gBAAI0D,aAAa,CAAjB,EACA;AACI,sBAAKzD,cAAL,CAAoB6C,QAApB,CAA6BC,OAA7B,CAAqC;AAAA,2BAAMC,GAAGpC,MAAH,GAAY,IAAlB;AAAA,iBAArC;AACH;AACD8C,yBAAa,CAAb;AACH,SARD;AASH,KAhII;AAkILK,wBAlIK,kCAmIL;AACI,YAAIC,WAAW,KAAK7D,eAAL,CAAqBU,IAArB,CAA0BoD,WAA1B,EAAf;AACA,YAAI,KAAK/D,cAAL,CAAoBU,MAApB,IAA8B,IAAlC,EAAwC;AACpC,iBAAKV,cAAL,CAAoBU,MAApB,GAA6B,KAA7B;AACA,iBAAKP,cAAL,CAAoB6D,MAApB,GAA6B,IAA7B;AACA;AACH;AACD,aAAKhE,cAAL,CAAoBU,MAApB,GAA6B,IAA7B;AACA,aAAKP,cAAL,CAAoB6D,MAApB,GAA6B,IAA7B;AACH,KA5II;AA8ILC,oBA9IK,8BA+IL;AACI,YAAIC,gBAAgB,EAApB;AACA,YAAIC,WAAW,KAAKrE,UAAL,CAAgBsE,uBAAhB,CAAwC,MAAxC,CAAf;AACID,iBAAStB,OAAT,CAAiB,gBAAQ;AACrB,gBAAIa,KAAKW,UAAL,EAAJ,EACAH,cAAcI,IAAd,CAAmBZ,KAAKC,OAAL,EAAnB;AACH,SAHD;AAIJ,eAAOO,aAAP;AACH,KAvJI;AAyJLK,cAzJK,wBA0JL;AACI,YAAIhB,QAAQ,KAAKU,gBAAL,EAAZ;AACA5C,cAAMC,QAAN,CAAeiD,UAAf,CAA0BhB,KAA1B;AACH,KA7JI;AA+JLiB,YA/JK,sBAgKL;AACInD,cAAMC,QAAN,CAAekD,QAAf;AACH,KAlKI;AAoKLC,gBApKK,wBAoKQnC,QApKR,EAoKkBoC,SApKlB,EAoK6BC,OApK7B,EAqKL;AACI,aAAKpF,OAAL,CAAakF,YAAb,CAA0BnC,QAA1B,EAAoCoC,SAApC,EAA+CC,OAA/C;AACA,aAAK9E,cAAL,CAAoBa,MAApB,GAA6BgB,QAAQJ,QAAR,CAAiBS,MAAjB,CAAwBO,QAAxB,CAA7B;AACA,aAAKsC,cAAL;AACA,aAAKtE,UAAL,CAAgBuE,YAAhB,GAA+B,IAA/B;AACA,YAAG,KAAK3B,mBAAL,IAA4BZ,QAA/B,EACA;AACI,iBAAKwC,YAAL;AACH;AACJ,KA9KI;AAgLLA,gBAhLK,0BAiLL;AACI,aAAK7B,aAAL,GAAqB,IAArB;AACA,aAAK3C,UAAL,CAAgBuE,YAAhB,GAA+B,KAA/B;AACA,YAAIV,WAAW,KAAK5D,YAAL,CAAkB6D,uBAAlB,CAA0C,MAA1C,CAAf;AACID,iBAAStB,OAAT,CAAiB,gBAAQ;AACrBa,iBAAK/C,IAAL,CAAUD,MAAV,GAAmB,KAAnB;AACH,SAFD;AAGP,KAxLI;AA0LLkE,kBA1LK,4BA2LL;AACI,aAAKvE,WAAL,CAAiBwE,YAAjB,GAAgCE,WAAWC,SAAX,CAAqB,KAAK/B,aAA1B,EAAyC,KAAKgB,gBAAL,EAAzC,CAAhC;AACH,KA7LI;AA+LLgB,kBA/LK,0BA+LU3C,QA/LV,EA+LoBiB,KA/LpB,EAgML;AACI,YAAM2B,mBAAmB,EAAzB;AACA,aAAKjC,aAAL,GAAqB8B,WAAWI,UAAX,CAAsB5B,KAAtB,CAArB;AACA,aAAK6B,mBAAL,CAAyB9C,QAAzB,EAAmCiB,KAAnC;AACA,aAAKL,mBAAL,GAA2BZ,QAA3B;AACA,YAAG,KAAKe,WAAL,CAAiBgC,cAAjB,CAAgC/C,QAAhC,CAAH,EAA8C;AAC1C,iBAAKe,WAAL,CAAiBf,QAAjB,KAA8BiB,MAAM+B,MAApC;AACH,SAFD,MAEO;AACH,iBAAKjC,WAAL,CAAiBf,QAAjB,IAA6B4C,mBAAmB3B,MAAM+B,MAAtD;AACH;AACD,YAAG,KAAKjC,WAAL,CAAiBf,QAAjB,KAA8B,CAAjC,EACA;AACI,iBAAK/C,OAAL,CAAagG,gBAAb,CAA8BjD,QAA9B;AACA,iBAAKvC,cAAL,CAAoB6C,QAApB,CAA6BC,OAA7B,CAAqC;AAAA,uBAAMC,GAAGpC,MAAH,GAAY,KAAlB;AAAA,aAArC;AACH;AACJ,KA/MI;AAiNL0E,uBAjNK,+BAiNe9C,QAjNf,EAiNyBiB,KAjNzB,EAkNL;AAAA;;AACI,YAAIiC,MAAM,CAAV;AACA,YAAMC,SAAS,EAAf;AACAlC,cAAMmC,IAAN,CAAW,UAACC,CAAD,EAAGC,CAAH;AAAA,mBAASD,IAAIC,CAAb;AAAA,SAAX;AACA,YAAGlE,QAAQJ,QAAR,CAAiBS,MAAjB,CAAwBO,QAAxB,CAAH,EAAsC;AAClCiB,kBAAMV,OAAN,CAAc,cAAM;AAChB,oBAAIa,OAAO,OAAK5D,UAAL,CAAgB+F,cAAhB,CAA+B,UAAU/C,EAAzC,CAAX;AACAY,qBAAKoC,YAAL,CAAkB,MAAlB,EAA0BC,UAA1B;AACArC,qBAAKE,SAAL,CAAe,OAAKrD,YAApB;AACAmD,qBAAKsC,CAAL,GAASR,QAAQC,MAAjB;AACH,aALD;AAMH,SAPD,MAOO;AACHlC,kBAAMV,OAAN,CAAc,cAAM;AAChB,oBAAIa,OAAO1E,WAAWsC,QAAX,CAAoBqC,OAApB,CAA4Bb,EAA5B,CAAX;AACAY,qBAAKE,SAAL,CAAe,OAAKrD,YAApB;AACAmD,qBAAKsC,CAAL,GAASR,QAAQC,MAAjB;AACH,aAJD;AAKH;AACJ,KApOI;AAsOLQ,iBAtOK,2BAuOL;AACI,YAAIvE,QAAQJ,QAAR,CAAiB4E,QAAjB,EAAJ,EACI,KAAK/D,iBAAL,CAAuB,KAAvB;;AAEJ,aAAK3B,SAAL,CAAe2F,IAAf;AACA,eAAO,KAAKrG,UAAL,CAAgB8C,QAAhB,CAAyB0C,MAAzB,GAAkC,CAAzC,EACA;AACI,iBAAKxF,UAAL,CAAgB8C,QAAhB,CAAyB,CAAzB,EAA4BwD,WAA5B,CAAwC,CAAxC,EAA0C,CAA1C;AACApH,uBAAWsC,QAAX,CAAoB+E,MAApB,CAA2B,KAAKvG,UAAL,CAAgB8C,QAAhB,CAAyB,CAAzB,CAA3B;AACH;;AAED,eAAO,KAAKrC,YAAL,CAAkBqC,QAAlB,CAA2B0C,MAA3B,GAAoC,CAA3C,EACA;AACI,iBAAK/E,YAAL,CAAkBqC,QAAlB,CAA2B,CAA3B,EAA8BwD,WAA9B,CAA0C,CAA1C,EAA4C,CAA5C;AACApH,uBAAWsC,QAAX,CAAoB+E,MAApB,CAA2B,KAAK9F,YAAL,CAAkBqC,QAAlB,CAA2B,CAA3B,CAA3B;AACH;;AAED,aAAK7C,cAAL,CAAoB6C,QAApB,CAA6BC,OAA7B,CAAqC;AAAA,mBAAMC,GAAGpC,MAAH,GAAY,KAAlB;AAAA,SAArC;AACH,KAzPI;AA2PL4F,cA3PK,wBA4PL;AACI,aAAK/G,OAAL,CAAagH,WAAb;AACA,aAAK1G,cAAL,CAAoBa,MAApB,GAA6B,KAA7B;AACA,aAAKuC,aAAL,GAAqB,IAArB;AACH,KAhQI;AAkQLuD,iBAlQK,yBAkQSC,MAlQT,EAmQL;AACItF,gBAAQC,GAAR,CAAYqF,MAAZ;AACH,KArQI;AAuQLC,iBAvQK,yBAuQSpE,QAvQT,EAuQmBqE,OAvQnB,EAwQL;AACI,aAAKpH,OAAL,CAAamH,aAAb,CAA2BpE,QAA3B,EAAqCqE,OAArC;AACA,YAAIjF,QAAQJ,QAAR,CAAiBS,MAAjB,CAAwBO,QAAxB,CAAJ,EACA;AACI,iBAAK1C,WAAL,CAAiBc,MAAjB,GAA0B,CAACiG,OAA3B;AACH;AACJ,KA9QI;AAgRLC,kBAhRK,4BAiRL;AACIvF,cAAMC,QAAN,CAAeuF,kBAAf,CAAkC,IAAlC;AACH,KAnRI;AAqRLC,yBArRK,iCAqRiBC,OArRjB,EAsRL;AACI,YAAIA,OAAJ,EACI,KAAKtH,WAAL,CAAiBuH,sBAAjB,CAAwC/H,GAAGmB,KAA3C,EAAkD4D,MAAlD,GAA2D,SAA3D,CADJ,KAGI,KAAKvE,WAAL,CAAiBuH,sBAAjB,CAAwC/H,GAAGmB,KAA3C,EAAkD4D,MAAlD,GAA2D,OAA3D;AACP,KA3RI;AA6RLiD,oBA7RK,4BA6RYC,SA7RZ,EA8RL;AACI,YAAIxF,QAAQJ,QAAR,CAAiB4E,QAAjB,EAAJ,EACA;AACI,iBAAK/D,iBAAL,CAAuB,IAAvB;AACH;AACD,aAAK3B,SAAL,CAAeG,IAAf,CAAoBD,MAApB,GAA6B,IAA7B;AACA,aAAKF,SAAL,CAAe2G,IAAf,CAAoBD,SAApB,EAA+BE,OAAOC,gBAAtC;AACH,KArSI;AAuSLC,eAvSK,yBAwSL;AACI,aAAK3H,WAAL,CAAiBe,MAAjB,GAA0B,KAA1B;AACA,aAAKd,WAAL,CAAiBc,MAAjB,GAA0B,KAA1B;AACA,aAAKF,SAAL,CAAe2F,IAAf;AACH;AA5SI,CAAT","file":"MenuGame.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\UI","sourcesContent":["\r\nvar MenuScene = require(\"MenuScene\");\r\nvar ObjectPool = require(\"ObjectPool\");\r\n\r\ncc.Class({\r\n    extends: MenuScene,\r\n\r\n    properties: {\r\n        onlineList: require(\"OnlineList\"),\r\n        chatBox: require(\"ChatBox\"),\r\n        SeatMgr: require(\"SeatMgr\"),\r\n        DealCards: require(\"DealCards\"),\r\n        ButtonLeave: cc.Node,\r\n        ButtonStart: cc.Node,\r\n        ButtonReady: cc.Node,\r\n        PlayingButtons: cc.Node,\r\n        myCardNode: cc.Node,\r\n        friendCardNode: cc.Node,\r\n        rightPanelNode: cc.Node,\r\n        showRightButton: cc.Button,\r\n        showRightLabel: cc.Label,\r\n        throwButton: cc.Button,\r\n        skipButton: cc.Button,\r\n        playZoneNode: cc.Node,\r\n        countDown: require(\"CountDown\"),\r\n    },\r\n\r\n    start()\r\n    {\r\n        this.ButtonLeave.active = false;\r\n        this.ButtonStart.active = false;\r\n        this.ButtonReady.active = false;\r\n        this.PlayingButtons.active = false;\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n        this.seatOccupied = [false, false, false, false];\r\n    },\r\n\r\n    addPlayer(player)\r\n    {\r\n        this.onlineList.addPlayer(player);\r\n    },\r\n\r\n    removePlayer(player)\r\n    {\r\n        this.onlineList.removePlayer(player);\r\n    },\r\n\r\n    requestSeat(sender, seat)\r\n    {\r\n        console.log(\"request Seat\");\r\n        GSMgr.instance.requestSeat(parseInt(seat));\r\n    },\r\n\r\n    requestLeaveSeat()\r\n    {\r\n        GSMgr.instance.leaveSeat(1 - GameMgr.instance.IsRegisterLeave());\r\n    },\r\n\r\n    playerEnterSeat(playerInfo, seat)\r\n    {\r\n        this.seatOccupied[seat] = true;\r\n        this.SeatMgr.onPlayerEnter(playerInfo, seat);\r\n        if (GameMgr.instance.IsMyId(playerInfo.id))\r\n        {\r\n            this.ButtonLeave.active = true;\r\n            //this.ButtonReady.active = !GameMgr.instance.IsHost(playerInfo.id);\r\n        }\r\n    },\r\n\r\n    playerLeaveSeat(seat)\r\n    {\r\n        if (GameMgr.instance.getMySeat() == seat)\r\n        {\r\n            this.ButtonLeave.active = false;\r\n            this.enableStartButton(false);\r\n        }\r\n        this.SeatMgr.onPlayerLeave(seat);\r\n    },\r\n\r\n    setHost(playerId)\r\n    {\r\n        this.SeatMgr.setHost(playerId);\r\n    },\r\n\r\n    enableStartButton(enable) {\r\n        this.ButtonStart.active = enable;\r\n    },\r\n\r\n    chatBoxClick()\r\n    {\r\n        this.onlineList.node.active = false;\r\n        this.chatBox.node.active = true;\r\n    },\r\n\r\n    onlineClick()\r\n    {\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n    },\r\n\r\n    onStartGameClick()\r\n    {\r\n        GSMgr.instance.startGame();\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    beginNewGame()\r\n    {\r\n        this.SeatMgr.hideResultIcon();\r\n        this.PlayingButtons.active = true;\r\n        this.previousCards = null;\r\n        this.previousThrowPlayer = null;\r\n        var myid = GameMgr.instance.getMyId();\r\n        this.CardsOnHand = {[myid] : 13};\r\n\r\n    },\r\n\r\n    onCardsReceived(cards)\r\n    {\r\n        this.beginNewGame();\r\n        this.ButtonStart.active = false;\r\n        let cardCount = 0;\r\n        this.DealCards.startAnim(()=>{\r\n            let card = ObjectPool.instance.getCard(cards[cardCount]);\r\n            card.setParent(this.myCardNode);\r\n            if (cardCount == 0)\r\n            {\r\n                this.friendCardNode.children.forEach(it => it.active = true);\r\n            }\r\n            cardCount += 1;\r\n        });\r\n    },\r\n\r\n    onShowRightMenuClick()\r\n    {\r\n        var position = this.showRightButton.node.getPosition();\r\n        if (this.rightPanelNode.active == true) {\r\n            this.rightPanelNode.active = false;\r\n            this.showRightLabel.string = \"<<\";\r\n            return;\r\n        }\r\n        this.rightPanelNode.active = true;\r\n        this.showRightLabel.string = \">>\";\r\n    },\r\n\r\n    getSelectedCards()\r\n    {\r\n        var SelectedCards = [];\r\n        let cardList = this.myCardNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                if (card.IsSelected())\r\n                SelectedCards.push(card.getCard());\r\n            })\r\n        return SelectedCards;\r\n    },\r\n\r\n    throwCards()\r\n    {\r\n        let cards = this.getSelectedCards();\r\n        GSMgr.instance.throwCards(cards);\r\n    },\r\n\r\n    skipTurn()\r\n    {\r\n        GSMgr.instance.skipTurn();\r\n    },\r\n\r\n    onTurnChange(playerId, startTime, timeout)\r\n    {\r\n        this.SeatMgr.onTurnChange(playerId, startTime, timeout);\r\n        this.PlayingButtons.active = GameMgr.instance.IsMyId(playerId);\r\n        this.checkThrowable();\r\n        this.skipButton.interactable = true;\r\n        if(this.previousThrowPlayer == playerId)\r\n        {\r\n            this.beginNewWave();\r\n        }\r\n    },\r\n\r\n    beginNewWave()\r\n    {\r\n        this.previousCards = null;\r\n        this.skipButton.interactable = false;\r\n        let cardList = this.playZoneNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                card.node.active = false;\r\n            });\r\n    },\r\n\r\n    checkThrowable()\r\n    {\r\n        this.throwButton.interactable = GameHelper.validTurn(this.previousCards, this.getSelectedCards());\r\n    },\r\n\r\n    onThrowSuccess(playerId, cards)\r\n    {\r\n        const MAX_CARD_ON_HAND = 13;\r\n        this.previousCards = GameHelper.parseCards(cards);\r\n        this.removeCardsFromHand(playerId, cards);\r\n        this.previousThrowPlayer = playerId;\r\n        if(this.CardsOnHand.hasOwnProperty(playerId)) {\r\n            this.CardsOnHand[playerId] -= cards.length;\r\n        } else {\r\n            this.CardsOnHand[playerId] = MAX_CARD_ON_HAND - cards.length;\r\n        }\r\n        if(this.CardsOnHand[playerId] == 0)\r\n        {\r\n            this.SeatMgr.onPlayerFinished(playerId);\r\n            this.friendCardNode.children.forEach(it => it.active = false);\r\n        }\r\n    },\r\n\r\n    removeCardsFromHand(playerId, cards)\r\n    {\r\n        let idx = 0;\r\n        const OFFSET = 50;\r\n        cards.sort((a,b) => a - b);\r\n        if(GameMgr.instance.IsMyId(playerId)) {\r\n            cards.forEach(it => {\r\n                let card = this.myCardNode.getChildByName(\"Card_\" + it);\r\n                card.getComponent(\"Card\").onDeselect();\r\n                card.setParent(this.playZoneNode);\r\n                card.x = idx++ * OFFSET;\r\n            });\r\n        } else {\r\n            cards.forEach(it => {\r\n                let card = ObjectPool.instance.getCard(it);                \r\n                card.setParent(this.playZoneNode);\r\n                card.x = idx++ * OFFSET;\r\n            });\r\n        }\r\n    },\r\n\r\n    onGameWaiting()\r\n    {\r\n        if (GameMgr.instance.IsMeHost())\r\n            this.enableStartButton(false);\r\n        \r\n        this.countDown.hide();\r\n        while (this.myCardNode.children.length > 0)\r\n        {\r\n            this.myCardNode.children[0].setPosition(0,0);\r\n            ObjectPool.instance.recall(this.myCardNode.children[0]);\r\n        }\r\n\r\n        while (this.playZoneNode.children.length > 0)\r\n        {\r\n            this.playZoneNode.children[0].setPosition(0,0);\r\n            ObjectPool.instance.recall(this.playZoneNode.children[0]);\r\n        }\r\n\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    onGameOver()\r\n    {\r\n        this.SeatMgr.stopAllTurn();\r\n        this.PlayingButtons.active = false;\r\n        this.previousCards = null;\r\n    },\r\n\r\n    displayResult(scores)\r\n    {\r\n        console.log(scores);\r\n    },\r\n\r\n    onPlayerReady(playerId, isReady)\r\n    {\r\n        this.SeatMgr.onPlayerReady(playerId, isReady);\r\n        if (GameMgr.instance.IsMyId(playerId))\r\n        {\r\n            this.ButtonReady.active = !isReady;\r\n        }\r\n    },\r\n\r\n    onReadyPressed()\r\n    {\r\n        GSMgr.instance.requestPlayerReady(true);\r\n    },\r\n\r\n    onPlayerRegisterLeave(isLeave)\r\n    {\r\n        if (isLeave)\r\n            this.ButtonLeave.getComponentInChildren(cc.Label).string = \"Unleave\";\r\n        else\r\n            this.ButtonLeave.getComponentInChildren(cc.Label).string = \"Leave\";\r\n    },\r\n\r\n    onGameStateReady(timeStamp)\r\n    {\r\n        if (GameMgr.instance.IsMeHost())\r\n        {\r\n            this.enableStartButton(true);\r\n        }\r\n        this.countDown.node.active = true;\r\n        this.countDown.show(timeStamp, Define.TIME_FORCE_START);\r\n    },\r\n\r\n    onGameStart()\r\n    {\r\n        this.ButtonStart.active = false;\r\n        this.ButtonReady.active = false;\r\n        this.countDown.hide();\r\n    }\r\n});\r\n"]}