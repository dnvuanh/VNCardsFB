{"version":3,"sources":["MenuGame.js"],"names":["MenuScene","require","ObjectPool","cc","Class","extends","properties","onlineList","chatBox","SeatMgr","DealCards","ButtonLeave","Node","ButtonStart","ButtonReady","PlayingButtons","myCardNode","friendCardNode","rightPanelNode","showRightButton","Button","throwButton","skipButton","playZoneNode","countDown","onLoad","active","node","addPlayer","player","removePlayer","requestSeat","sender","seat","console","log","GSMgr","instance","parseInt","requestLeaveSeat","leaveSeat","GameMgr","IsRegisterLeave","playerEnterSeat","playerInfo","onPlayerEnter","IsMyId","id","playerLeaveSeat","getMySeat","enableStartButton","onPlayerLeave","setHost","playerId","enable","chatBoxClick","onlineClick","onStartGameClick","startGame","children","forEach","it","beginNewGame","hideResultIcon","previousCards","previousThrowPlayer","myid","getMyId","PlayDealCardAnim","cards","cardCount","startAnim","card","getCard","setParent","onCardsReceived","playAnim","i","length","onShowRightMenuClick","position","getPosition","getSelectedCards","SelectedCards","cardList","getComponentsInChildren","IsSelected","push","throwCards","skipTurn","onTurnChange","startTime","timeout","checkThrowable","interactable","beginNewWave","GameHelper","validTurn","onThrowSuccess","MAX_CARD_ON_HAND","parseCards","removeCardsFromHand","sort","a","b","getChildByName","getComponent","onDeselect","setPosition","onGameWaiting","IsMeHost","hide","recall","onGameOver","stopAllTurn","displayResult","scores","playerWinId","playersCards","onPlayerReady","isReady","onReadyPressed","requestPlayerReady","onPlayerRegisterLeave","isLeave","getComponentInChildren","Label","string","onGameStateReady","timeStamp","show","Define","TIME_FORCE_START","onGameStart","refreshSeats","Seats"],"mappings":"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","file":"MenuGame.js","sourceRoot":"../../../../../assets/Script/UI","sourcesContent":["\r\nvar MenuScene = require(\"MenuScene\");\r\nvar ObjectPool = require(\"ObjectPool\");\r\n\r\ncc.Class({\r\n    extends: MenuScene,\r\n\r\n    properties: {\r\n        onlineList: require(\"OnlineList\"),\r\n        chatBox: require(\"ChatBox\"),\r\n        SeatMgr: require(\"SeatMgr\"),\r\n        DealCards: require(\"DealCards\"),\r\n        ButtonLeave: cc.Node,\r\n        ButtonStart: cc.Node,\r\n        ButtonReady: cc.Node,\r\n        PlayingButtons: cc.Node,\r\n        myCardNode: cc.Node,\r\n        friendCardNode: cc.Node,\r\n        rightPanelNode: cc.Node,\r\n        showRightButton: cc.Button,\r\n        throwButton: cc.Button,\r\n        skipButton: cc.Button,\r\n        playZoneNode: cc.Node,\r\n        countDown: require(\"CountDown\"),\r\n    },\r\n\r\n    onLoad()\r\n    {\r\n        this.ButtonLeave.active = false;\r\n        this.ButtonStart.active = false;\r\n        this.ButtonReady.active = false;\r\n        this.PlayingButtons.active = false;\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n        //this.seatOccupied = [false, false, false, false];\r\n    },\r\n\r\n    addPlayer(player)\r\n    {\r\n        this.onlineList.addPlayer(player);\r\n    },\r\n\r\n    removePlayer(player)\r\n    {\r\n        this.onlineList.removePlayer(player);\r\n    },\r\n\r\n    requestSeat(sender, seat)\r\n    {\r\n        console.log(\"request Seat\");\r\n        GSMgr.instance.requestSeat(parseInt(seat));\r\n    },\r\n\r\n    requestLeaveSeat()\r\n    {\r\n        GSMgr.instance.leaveSeat(1 - GameMgr.instance.IsRegisterLeave());\r\n    },\r\n\r\n    playerEnterSeat(playerInfo, seat)\r\n    {\r\n        //this.seatOccupied[seat] = true;\r\n        this.SeatMgr.onPlayerEnter(playerInfo, seat);\r\n        if (GameMgr.instance.IsMyId(playerInfo.id))\r\n        {\r\n            this.ButtonLeave.active = true;\r\n        }\r\n    },\r\n\r\n    playerLeaveSeat(seat)\r\n    {\r\n        if (GameMgr.instance.getMySeat() == seat)\r\n        {\r\n            this.ButtonLeave.active = false;\r\n            this.enableStartButton(false);\r\n        }\r\n        this.SeatMgr.onPlayerLeave(seat);\r\n    },\r\n\r\n    setHost(playerId)\r\n    {\r\n        this.SeatMgr.setHost(playerId);\r\n    },\r\n\r\n    enableStartButton(enable) {\r\n        this.ButtonStart.active = enable;\r\n    },\r\n\r\n    chatBoxClick()\r\n    {\r\n        this.onlineList.node.active = false;\r\n        this.chatBox.node.active = true;\r\n    },\r\n\r\n    onlineClick()\r\n    {\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n    },\r\n\r\n    onStartGameClick()\r\n    {\r\n        GSMgr.instance.startGame();\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    beginNewGame()\r\n    {\r\n        this.SeatMgr.hideResultIcon();\r\n        this.PlayingButtons.active = true;\r\n        this.previousCards = null;\r\n        this.previousThrowPlayer = null;\r\n        var myid = GameMgr.instance.getMyId();\r\n    },\r\n\r\n    PlayDealCardAnim(cards)\r\n    {\r\n        let cardCount = 0;\r\n        this.DealCards.startAnim(()=>{\r\n            let card = ObjectPool.instance.getCard(cards[cardCount]);\r\n                card && card.setParent(this.myCardNode);\r\n            if (cardCount == 0)\r\n            {\r\n                this.friendCardNode.children.forEach(it => it.active = true);\r\n            }\r\n            cardCount += 1;\r\n        });\r\n    },\r\n\r\n    onCardsReceived(cards, playAnim)\r\n    {\r\n        this.beginNewGame();\r\n        this.ButtonStart.active = false;\r\n        if (playAnim)\r\n            this.PlayDealCardAnim(cards);\r\n        else\r\n        {\r\n            for (let i=0; i<cards.length; i++)\r\n            {\r\n                let card = ObjectPool.instance.getCard(cards[i]);\r\n                    card && card.setParent(this.myCardNode);\r\n            }\r\n        }\r\n    },\r\n\r\n    onShowRightMenuClick()\r\n    {\r\n        var position = this.showRightButton.node.getPosition();\r\n        if (this.rightPanelNode.active == true) {\r\n            this.rightPanelNode.active = false;\r\n            //this.showRightLabel.string = \"<<\";\r\n            return;\r\n        }\r\n        this.rightPanelNode.active = true;\r\n        //this.showRightLabel.string = \">>\";\r\n    },\r\n\r\n    getSelectedCards()\r\n    {\r\n        var SelectedCards = [];\r\n        let cardList = this.myCardNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                if (card.IsSelected())\r\n                SelectedCards.push(card.getCard());\r\n            })\r\n        return SelectedCards;\r\n    },\r\n\r\n    throwCards()\r\n    {\r\n        let cards = this.getSelectedCards();\r\n        GSMgr.instance.throwCards(cards);\r\n    },\r\n\r\n    skipTurn()\r\n    {\r\n        GSMgr.instance.skipTurn();\r\n    },\r\n\r\n    onTurnChange(playerId, startTime, timeout)\r\n    {\r\n        this.SeatMgr.onTurnChange(playerId, startTime, timeout);\r\n        this.PlayingButtons.active = GameMgr.instance.IsMyId(playerId);\r\n        this.checkThrowable();\r\n        this.skipButton.interactable = true;\r\n        if(this.previousThrowPlayer == playerId)\r\n        {\r\n            this.beginNewWave();\r\n        }\r\n    },\r\n\r\n    beginNewWave()\r\n    {\r\n        this.previousCards = null;\r\n        this.skipButton.interactable = false;\r\n        let cardList = this.playZoneNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                card.node.active = false;\r\n            });\r\n    },\r\n\r\n    checkThrowable()\r\n    {\r\n        this.throwButton.interactable = GameHelper.validTurn(this.previousCards, this.getSelectedCards());\r\n    },\r\n\r\n    onThrowSuccess(playerId, cards)\r\n    {\r\n        const MAX_CARD_ON_HAND = 13;\r\n        this.previousCards = GameHelper.parseCards(cards);\r\n        this.removeCardsFromHand(playerId, cards);\r\n        this.previousThrowPlayer = playerId;\r\n    },\r\n\r\n    removeCardsFromHand(playerId, cards)\r\n    {\r\n        let cardList = this.playZoneNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                card.node.active = false;\r\n            });\r\n            \r\n        cards.sort((a,b) => a - b);\r\n        if(GameMgr.instance.IsMyId(playerId)) {\r\n            cards.forEach(it => {\r\n                let card = this.myCardNode.getChildByName(\"Card_\" + it);\r\n                card.getComponent(\"Card\").onDeselect();\r\n                card.setParent(this.playZoneNode);\r\n                card.setPosition(0, 0);\r\n            });\r\n        } else {\r\n            cards.forEach(it => {\r\n                let card = ObjectPool.instance.getCard(it);\r\n                card.setParent(this.playZoneNode);\r\n                card.setPosition(0, 0);\r\n            });\r\n        }\r\n    },\r\n\r\n    onGameWaiting()\r\n    {\r\n        if (GameMgr.instance.IsMeHost())\r\n            this.enableStartButton(false);\r\n        \r\n        this.countDown.hide();\r\n        while (this.myCardNode.children.length > 0)\r\n        {\r\n            this.myCardNode.children[0].setPosition(0,0);\r\n            ObjectPool.instance.recall(this.myCardNode.children[0]);\r\n        }\r\n\r\n        while (this.playZoneNode.children.length > 0)\r\n        {\r\n            this.playZoneNode.children[0].setPosition(0,0);\r\n            ObjectPool.instance.recall(this.playZoneNode.children[0]);\r\n        }\r\n\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    onGameOver()\r\n    {\r\n        this.SeatMgr.stopAllTurn();\r\n        this.PlayingButtons.active = false;\r\n        this.previousCards = null;\r\n    },\r\n\r\n    displayResult(scores, playerWinId, playersCards)\r\n    {\r\n        // if(playersCards[playerWinId].length == 13)\r\n        // {\r\n        //     this.PlayDealCardAnim(playersCards[GameMgr.instance.getMyId()]);\r\n        // }\r\n        console.log(scores);\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n        this.SeatMgr.displayResult(playerWinId, playersCards);\r\n    },\r\n\r\n    onPlayerReady(playerId, isReady)\r\n    {\r\n        this.SeatMgr.onPlayerReady(playerId, isReady);\r\n        if (GameMgr.instance.IsMyId(playerId))\r\n        {\r\n            this.ButtonReady.active = !isReady;\r\n        }\r\n    },\r\n\r\n    onReadyPressed()\r\n    {\r\n        GSMgr.instance.requestPlayerReady(true);\r\n    },\r\n\r\n    onPlayerRegisterLeave(isLeave)\r\n    {\r\n        if (isLeave)\r\n            this.ButtonLeave.getComponentInChildren(cc.Label).string = \"Unleave\";\r\n        else\r\n            this.ButtonLeave.getComponentInChildren(cc.Label).string = \"Leave\";\r\n    },\r\n\r\n    onGameStateReady(timeStamp)\r\n    {\r\n        if (GameMgr.instance.IsMeHost())\r\n        {\r\n            this.enableStartButton(true);\r\n        }\r\n        this.countDown.node.active = true;\r\n        this.countDown.show(timeStamp, Define.TIME_FORCE_START);\r\n    },\r\n\r\n    onGameStart()\r\n    {\r\n        this.ButtonStart.active = false;\r\n        this.ButtonReady.active = false;\r\n        this.countDown.hide();\r\n    },\r\n\r\n    refreshSeats(Seats)\r\n    {\r\n        this.SeatMgr.refreshSeats(Seats);\r\n    }\r\n});\r\n"]}