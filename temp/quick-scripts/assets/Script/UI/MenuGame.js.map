{"version":3,"sources":["MenuGame.js"],"names":["MenuScene","require","ObjectPool","cc","Class","extends","properties","onlineList","chatBox","SeatMgr","DealCards","ButtonLeave","Node","ButtonStart","ButtonReady","PlayingButtons","myCardNode","friendCardNode","rightPanelNode","showRightButton","Button","showRightLabel","Label","throwButton","skipButton","playZoneNode","countDown","start","active","node","addPlayer","player","removePlayer","requestSeat","sender","seat","console","log","GSMgr","instance","parseInt","requestLeaveSeat","leaveSeat","GameMgr","IsRegisterLeave","playerEnterSeat","playerInfo","onPlayerEnter","IsMyId","id","playerLeaveSeat","getMySeat","enableStartButton","onPlayerLeave","setHost","playerId","enable","chatBoxClick","onlineClick","onStartGameClick","startGame","children","forEach","it","beginNewGame","hideResultIcon","previousCards","previousThrowPlayer","myid","getMyId","onCardsReceived","cards","cardCount","startAnim","card","getCard","setParent","onShowRightMenuClick","position","getPosition","string","getSelectedCards","SelectedCards","cardList","getComponentsInChildren","IsSelected","push","throwCards","skipTurn","onTurnChange","startTime","timeout","checkThrowable","interactable","beginNewWave","GameHelper","validTurn","onThrowSuccess","MAX_CARD_ON_HAND","parseCards","removeCardsFromHand","sort","a","b","getChildByName","getComponent","onDeselect","setPosition","onGameWaiting","IsMeHost","hide","length","recall","onGameOver","stopAllTurn","displayResult","scores","playerWinId","playersCards","onPlayerReady","isReady","onReadyPressed","requestPlayerReady","onPlayerRegisterLeave","isLeave","getComponentInChildren","onGameStateReady","timeStamp","show","Define","TIME_FORCE_START","onGameStart"],"mappings":"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","file":"MenuGame.js","sourceRoot":"../../../../../assets/Script/UI","sourcesContent":["\r\nvar MenuScene = require(\"MenuScene\");\r\nvar ObjectPool = require(\"ObjectPool\");\r\n\r\ncc.Class({\r\n    extends: MenuScene,\r\n\r\n    properties: {\r\n        onlineList: require(\"OnlineList\"),\r\n        chatBox: require(\"ChatBox\"),\r\n        SeatMgr: require(\"SeatMgr\"),\r\n        DealCards: require(\"DealCards\"),\r\n        ButtonLeave: cc.Node,\r\n        ButtonStart: cc.Node,\r\n        ButtonReady: cc.Node,\r\n        PlayingButtons: cc.Node,\r\n        myCardNode: cc.Node,\r\n        friendCardNode: cc.Node,\r\n        rightPanelNode: cc.Node,\r\n        showRightButton: cc.Button,\r\n        showRightLabel: cc.Label,\r\n        throwButton: cc.Button,\r\n        skipButton: cc.Button,\r\n        playZoneNode: cc.Node,\r\n        countDown: require(\"CountDown\"),\r\n    },\r\n\r\n    start()\r\n    {\r\n        this.ButtonLeave.active = false;\r\n        this.ButtonStart.active = false;\r\n        this.ButtonReady.active = false;\r\n        this.PlayingButtons.active = false;\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n        //this.seatOccupied = [false, false, false, false];\r\n    },\r\n\r\n    addPlayer(player)\r\n    {\r\n        this.onlineList.addPlayer(player);\r\n    },\r\n\r\n    removePlayer(player)\r\n    {\r\n        this.onlineList.removePlayer(player);\r\n    },\r\n\r\n    requestSeat(sender, seat)\r\n    {\r\n        console.log(\"request Seat\");\r\n        GSMgr.instance.requestSeat(parseInt(seat));\r\n    },\r\n\r\n    requestLeaveSeat()\r\n    {\r\n        GSMgr.instance.leaveSeat(1 - GameMgr.instance.IsRegisterLeave());\r\n    },\r\n\r\n    playerEnterSeat(playerInfo, seat)\r\n    {\r\n        //this.seatOccupied[seat] = true;\r\n        this.SeatMgr.onPlayerEnter(playerInfo, seat);\r\n        if (GameMgr.instance.IsMyId(playerInfo.id))\r\n        {\r\n            this.ButtonLeave.active = true;\r\n        }\r\n    },\r\n\r\n    playerLeaveSeat(seat)\r\n    {\r\n        if (GameMgr.instance.getMySeat() == seat)\r\n        {\r\n            this.ButtonLeave.active = false;\r\n            this.enableStartButton(false);\r\n        }\r\n        this.SeatMgr.onPlayerLeave(seat);\r\n    },\r\n\r\n    setHost(playerId)\r\n    {\r\n        this.SeatMgr.setHost(playerId);\r\n    },\r\n\r\n    enableStartButton(enable) {\r\n        this.ButtonStart.active = enable;\r\n    },\r\n\r\n    chatBoxClick()\r\n    {\r\n        this.onlineList.node.active = false;\r\n        this.chatBox.node.active = true;\r\n    },\r\n\r\n    onlineClick()\r\n    {\r\n        this.onlineList.node.active = true;\r\n        this.chatBox.node.active = false;\r\n    },\r\n\r\n    onStartGameClick()\r\n    {\r\n        GSMgr.instance.startGame();\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    beginNewGame()\r\n    {\r\n        this.SeatMgr.hideResultIcon();\r\n        this.PlayingButtons.active = true;\r\n        this.previousCards = null;\r\n        this.previousThrowPlayer = null;\r\n        var myid = GameMgr.instance.getMyId();\r\n    },\r\n\r\n    onCardsReceived(cards)\r\n    {\r\n        this.beginNewGame();\r\n        this.ButtonStart.active = false;\r\n        let cardCount = 0;\r\n        this.DealCards.startAnim(()=>{\r\n            let card = ObjectPool.instance.getCard(cards[cardCount]);\r\n            card.setParent(this.myCardNode);\r\n            if (cardCount == 0)\r\n            {\r\n                this.friendCardNode.children.forEach(it => it.active = true);\r\n            }\r\n            cardCount += 1;\r\n        });\r\n    },\r\n\r\n    onShowRightMenuClick()\r\n    {\r\n        var position = this.showRightButton.node.getPosition();\r\n        if (this.rightPanelNode.active == true) {\r\n            this.rightPanelNode.active = false;\r\n            this.showRightLabel.string = \"<<\";\r\n            return;\r\n        }\r\n        this.rightPanelNode.active = true;\r\n        this.showRightLabel.string = \">>\";\r\n    },\r\n\r\n    getSelectedCards()\r\n    {\r\n        var SelectedCards = [];\r\n        let cardList = this.myCardNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                if (card.IsSelected())\r\n                SelectedCards.push(card.getCard());\r\n            })\r\n        return SelectedCards;\r\n    },\r\n\r\n    throwCards()\r\n    {\r\n        let cards = this.getSelectedCards();\r\n        GSMgr.instance.throwCards(cards);\r\n    },\r\n\r\n    skipTurn()\r\n    {\r\n        GSMgr.instance.skipTurn();\r\n    },\r\n\r\n    onTurnChange(playerId, startTime, timeout)\r\n    {\r\n        this.SeatMgr.onTurnChange(playerId, startTime, timeout);\r\n        this.PlayingButtons.active = GameMgr.instance.IsMyId(playerId);\r\n        this.checkThrowable();\r\n        this.skipButton.interactable = true;\r\n        if(this.previousThrowPlayer == playerId)\r\n        {\r\n            this.beginNewWave();\r\n        }\r\n    },\r\n\r\n    beginNewWave()\r\n    {\r\n        this.previousCards = null;\r\n        this.skipButton.interactable = false;\r\n        let cardList = this.playZoneNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                card.node.active = false;\r\n            });\r\n    },\r\n\r\n    checkThrowable()\r\n    {\r\n        this.throwButton.interactable = GameHelper.validTurn(this.previousCards, this.getSelectedCards());\r\n    },\r\n\r\n    onThrowSuccess(playerId, cards)\r\n    {\r\n        const MAX_CARD_ON_HAND = 13;\r\n        this.previousCards = GameHelper.parseCards(cards);\r\n        this.removeCardsFromHand(playerId, cards);\r\n        this.previousThrowPlayer = playerId;\r\n    },\r\n\r\n    removeCardsFromHand(playerId, cards)\r\n    {\r\n        let cardList = this.playZoneNode.getComponentsInChildren(\"Card\");\r\n            cardList.forEach(card => {\r\n                card.node.active = false;\r\n            });\r\n            \r\n        cards.sort((a,b) => a - b);\r\n        if(GameMgr.instance.IsMyId(playerId)) {\r\n            cards.forEach(it => {\r\n                let card = this.myCardNode.getChildByName(\"Card_\" + it);\r\n                card.getComponent(\"Card\").onDeselect();\r\n                card.setParent(this.playZoneNode);\r\n                card.setPosition(0, 0);\r\n            });\r\n        } else {\r\n            cards.forEach(it => {\r\n                let card = ObjectPool.instance.getCard(it);                \r\n                card.setParent(this.playZoneNode);\r\n                card.setPosition(0, 0);\r\n            });\r\n        }\r\n    },\r\n\r\n    onGameWaiting()\r\n    {\r\n        if (GameMgr.instance.IsMeHost())\r\n            this.enableStartButton(false);\r\n        \r\n        this.countDown.hide();\r\n        while (this.myCardNode.children.length > 0)\r\n        {\r\n            this.myCardNode.children[0].setPosition(0,0);\r\n            ObjectPool.instance.recall(this.myCardNode.children[0]);\r\n        }\r\n\r\n        while (this.playZoneNode.children.length > 0)\r\n        {\r\n            this.playZoneNode.children[0].setPosition(0,0);\r\n            ObjectPool.instance.recall(this.playZoneNode.children[0]);\r\n        }\r\n\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n    },\r\n\r\n    onGameOver()\r\n    {\r\n        this.SeatMgr.stopAllTurn();\r\n        this.PlayingButtons.active = false;\r\n        this.previousCards = null;\r\n    },\r\n\r\n    displayResult(scores, playerWinId, playersCards)\r\n    {\r\n        console.log(scores);\r\n        this.friendCardNode.children.forEach(it => it.active = false);\r\n        this.SeatMgr.displayResult(playerWinId, playersCards);\r\n    },\r\n\r\n    onPlayerReady(playerId, isReady)\r\n    {\r\n        this.SeatMgr.onPlayerReady(playerId, isReady);\r\n        if (GameMgr.instance.IsMyId(playerId))\r\n        {\r\n            this.ButtonReady.active = !isReady;\r\n        }\r\n    },\r\n\r\n    onReadyPressed()\r\n    {\r\n        GSMgr.instance.requestPlayerReady(true);\r\n    },\r\n\r\n    onPlayerRegisterLeave(isLeave)\r\n    {\r\n        if (isLeave)\r\n            this.ButtonLeave.getComponentInChildren(cc.Label).string = \"Unleave\";\r\n        else\r\n            this.ButtonLeave.getComponentInChildren(cc.Label).string = \"Leave\";\r\n    },\r\n\r\n    onGameStateReady(timeStamp)\r\n    {\r\n        if (GameMgr.instance.IsMeHost())\r\n        {\r\n            this.enableStartButton(true);\r\n        }\r\n        this.countDown.node.active = true;\r\n        this.countDown.show(timeStamp, Define.TIME_FORCE_START);\r\n    },\r\n\r\n    onGameStart()\r\n    {\r\n        this.ButtonStart.active = false;\r\n        this.ButtonReady.active = false;\r\n        this.countDown.hide();\r\n    }\r\n});\r\n"]}