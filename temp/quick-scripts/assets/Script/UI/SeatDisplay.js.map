{"version":3,"sources":["SeatDisplay.js"],"names":["cc","Class","extends","Component","properties","displayNode","Node","avatar","Sprite","userName","Label","money","hostIcon","turnCountDown","ProgressBar","onInit","index","position","active","node","IsMyTurn","setPosition","positionAfterRotate","display","playerInfo","playerId","id","photo","scriptData","Photo","displayName","ImageCache","loadAvatar","imgSprite","spriteFrame","console","log","string","getPlayerId","remove","setHost","isHost","displayTurn","startTime","timeout","timeStartTurn","timeoutTurnMill","timeEndTurn","disableCountDown","update","dt","timeNow","Date","now","percent","progress","setReady","isReady","opacity","onClick","GSMgr","instance","requestSeat","setPositionAfterRotate","pos","getPositionAfterRotate"],"mappings":"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","file":"SeatDisplay.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\UI","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        displayNode: cc.Node,\r\n        avatar: cc.Sprite,\r\n        userName: cc.Label,\r\n        money: cc.Label,\r\n        hostIcon: cc.Node,\r\n        turnCountDown: cc.ProgressBar,\r\n    },\r\n\r\n    onInit(index, position)\r\n    {\r\n        this.displayNode.active = false;\r\n        this.hostIcon.active = false;\r\n        this.turnCountDown.node.active = false;\r\n        this.IsMyTurn = false;\r\n        this.index = index;\r\n        this.node.setPosition(position);\r\n        this.positionAfterRotate = index;\r\n    },\r\n\r\n    display(playerInfo)\r\n    {\r\n        this.playerId = playerInfo.id;\r\n        let photo = playerInfo.scriptData.Photo;\r\n        let displayName = playerInfo.displayName;\r\n\r\n        ImageCache.loadAvatar(this.playerId, photo, (imgSprite)=>{\r\n            if (imgSprite)\r\n            {\r\n                this.avatar.spriteFrame = imgSprite;\r\n            }\r\n            else\r\n            {\r\n                console.log(\"Error while loading user avatar \" + this.playerId);\r\n            }\r\n            this.userName.string = displayName;\r\n            this.displayNode.active = true;\r\n        });\r\n    },\r\n\r\n    getPlayerId()\r\n    {\r\n        return this.playerId;\r\n    },\r\n\r\n    remove()\r\n    {\r\n        this.playerId = null;\r\n        this.hostIcon.active = false;\r\n        this.displayNode.active = false;\r\n    },\r\n\r\n    setHost(isHost)\r\n    {\r\n        this.hostIcon.active = isHost;\r\n    },\r\n\r\n    displayTurn(startTime, timeout)\r\n    {\r\n        this.turnCountDown.node.active = true;\r\n        this.timeStartTurn = startTime;\r\n        this.timeoutTurnMill = timeout * 1000;\r\n        this.timeEndTurn = this.timeStartTurn + this.timeoutTurnMill;\r\n        this.IsMyTurn = true;\r\n    },\r\n\r\n    disableCountDown()\r\n    {\r\n        this.IsMyTurn = false;\r\n        this.turnCountDown.node.active = false;\r\n    },\r\n\r\n    update(dt)\r\n    {\r\n        if (this.IsMyTurn)\r\n        {\r\n            let timeNow = Date.now();\r\n            let percent = (this.timeEndTurn - timeNow) / this.timeoutTurnMill;\r\n            if (percent > 0)\r\n            {\r\n                this.turnCountDown.progress = percent;\r\n            }\r\n            else\r\n            {\r\n                this.IsMyTurn = false;\r\n                this.turnCountDown.progress = 0;\r\n                this.turnCountDown.node.active = false;\r\n            }\r\n        }\r\n    },\r\n\r\n    setReady(isReady)\r\n    {\r\n        if (isReady)\r\n        {\r\n            this.node.opacity = 255;\r\n        }\r\n        else\r\n        {\r\n            this.node.opacity = 125;\r\n        }\r\n    },\r\n\r\n    onClick()\r\n    {\r\n        GSMgr.instance.requestSeat(this.index);\r\n    },\r\n\r\n    setPositionAfterRotate(pos)\r\n    {\r\n        this.positionAfterRotate = pos;\r\n    },\r\n\r\n    getPositionAfterRotate()\r\n    {\r\n        return this.positionAfterRotate;\r\n    }\r\n});\r\n"]}